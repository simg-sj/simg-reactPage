{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\simg-tour\\\\src\\\\components\\\\selectGender.tsx\",\n  _s = $RefreshSig$();\nimport { Controller, useController } from \"react-hook-form\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectGender({\n  control,\n  gender,\n  setGender\n}) {\n  _s();\n  const {\n    field: genders\n  } = useController({\n    name: \"genders\",\n    control\n  });\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    control: control,\n    name: \"gender\",\n    rules: {\n      required: true\n    }\n    // render를 사용해서, field값을 복사하거나 꺼내 쓰면 된다.\n    // field안에는 value나 onBlur와 같은 함수도 있음\n    // render안의 onChange를 조작해, onChange안에 들어갈 값을\n    // 선택할 수 있다.\n    ,\n    render: ({\n      field: {\n        onChange\n      }\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[100px] h-[30px] border rounded-xl bg-[#D9D9D9]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex items-center justify-center h-full text-[13px] font-semibold font-['Hack-Bold']\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: gender === 'male' ? 'genderBtnOn' : 'genderBtnOff',\n          onClick: event => {\n            setGender('male');\n            onChange('male');\n          },\n          children: \"\\uB0A8\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: gender === 'female' ? 'genderBtnOn' : 'genderBtnOff',\n          onClick: event => {\n            setGender('female');\n            onChange('male');\n          },\n          children: \"\\uC5EC\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(SelectGender, \"XWMUcf8I7gv/9S/0qquRrpUssAM=\", false, function () {\n  return [useController];\n});\n_c = SelectGender;\nexport default SelectGender;\nvar _c;\n$RefreshReg$(_c, \"SelectGender\");","map":{"version":3,"names":["Controller","useController","React","jsxDEV","_jsxDEV","SelectGender","control","gender","setGender","_s","field","genders","name","rules","required","render","onChange","className","children","onClick","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/simg-tour/src/components/selectGender.tsx"],"sourcesContent":["import {Controller, useController} from \"react-hook-form\";\r\nimport React, {SetStateAction, useState} from \"react\";\r\n\r\ninterface tempProps {\r\n    control : any,\r\n    gender : string,\r\n    setGender : React.Dispatch<React.SetStateAction<string>>\r\n}\r\nfunction SelectGender({control, gender, setGender} : tempProps) {\r\n    const { field: genders } = useController({\r\n        name: \"genders\",\r\n        control,\r\n    });\r\n    return (\r\n        <Controller\r\n            control={control}\r\n            name='gender'\r\n            rules={{ required: true}}\r\n            // render를 사용해서, field값을 복사하거나 꺼내 쓰면 된다.\r\n            // field안에는 value나 onBlur와 같은 함수도 있음\r\n            // render안의 onChange를 조작해, onChange안에 들어갈 값을\r\n            // 선택할 수 있다.\r\n            render={({ field: { onChange } }) => (\r\n        <div className='w-[100px] h-[30px] border rounded-xl bg-[#D9D9D9]'>\r\n            <div className=\"w-full flex items-center justify-center h-full text-[13px] font-semibold font-['Hack-Bold']\">\r\n                <button className={gender === 'male' ? 'genderBtnOn' : 'genderBtnOff'} onClick={(event : React.MouseEvent<HTMLButtonElement>) => {\r\n                    setGender('male');\r\n                    onChange('male');\r\n                }}>\r\n                    남자\r\n                </button>\r\n                <button className={gender === 'female' ? 'genderBtnOn' : 'genderBtnOff'} onClick={(event : React.MouseEvent<HTMLButtonElement>) => {\r\n                    setGender('female');\r\n                    onChange('male');\r\n                }}>\r\n                    여자\r\n                </button>\r\n            </div>\r\n        </div>\r\n            )}\r\n        />\r\n    )\r\n}\r\nexport default SelectGender;\r\n"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,aAAa,QAAO,iBAAiB;AACzD,OAAOC,KAAK,MAAkC,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtD,SAASC,YAAYA,CAAC;EAACC,OAAO;EAAEC,MAAM;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM;IAAEC,KAAK,EAAEC;EAAQ,CAAC,GAAGV,aAAa,CAAC;IACrCW,IAAI,EAAE,SAAS;IACfN;EACJ,CAAC,CAAC;EACF,oBACIF,OAAA,CAACJ,UAAU;IACPM,OAAO,EAAEA,OAAQ;IACjBM,IAAI,EAAC,QAAQ;IACbC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAI;IACvB;IACA;IACA;IACA;IAAA;IACAC,MAAM,EAAEA,CAAC;MAAEL,KAAK,EAAE;QAAEM;MAAS;IAAE,CAAC,kBACpCZ,OAAA;MAAKa,SAAS,EAAC,mDAAmD;MAAAC,QAAA,eAC9Dd,OAAA;QAAKa,SAAS,EAAC,6FAA6F;QAAAC,QAAA,gBACxGd,OAAA;UAAQa,SAAS,EAAEV,MAAM,KAAK,MAAM,GAAG,aAAa,GAAG,cAAe;UAACY,OAAO,EAAGC,KAA2C,IAAK;YAC7HZ,SAAS,CAAC,MAAM,CAAC;YACjBQ,QAAQ,CAAC,MAAM,CAAC;UACpB,CAAE;UAAAE,QAAA,EAAC;QAEH;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTpB,OAAA;UAAQa,SAAS,EAAEV,MAAM,KAAK,QAAQ,GAAG,aAAa,GAAG,cAAe;UAACY,OAAO,EAAGC,KAA2C,IAAK;YAC/HZ,SAAS,CAAC,QAAQ,CAAC;YACnBQ,QAAQ,CAAC,MAAM,CAAC;UACpB,CAAE;UAAAE,QAAA,EAAC;QAEH;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACf,EAAA,CAlCQJ,YAAY;EAAA,QACUJ,aAAa;AAAA;AAAAwB,EAAA,GADnCpB,YAAY;AAmCrB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}