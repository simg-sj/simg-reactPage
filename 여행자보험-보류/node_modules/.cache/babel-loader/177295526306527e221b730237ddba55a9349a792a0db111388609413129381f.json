{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\simg-tour\\\\src\\\\components\\\\monitor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SSHMonitor = () => {\n  _s();\n  const [sshLogs, setSSHLogs] = useState([]);\n  useEffect(() => {\n    const socket = io('http://localhost:4000');\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n\n    // SSH 로그 이벤트를 받아 처리하는 코드\n    socket.on('sshEvent', data => {\n      // 새로운 SSH 로그를 받으면 sshLogs 배열에 추가\n      setSSHLogs(prevLogs => [...prevLogs, data]);\n    });\n    return () => {\n      // 컴포넌트가 언마운트될 때 소켓 연결 해제\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SSH Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sshLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(SSHMonitor, \"xdSkrZeVGpBnGxUqf7ABaZa3u+M=\");\n_c = SSHMonitor;\nexport default SSHMonitor;\nvar _c;\n$RefreshReg$(_c, \"SSHMonitor\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","SSHMonitor","_s","sshLogs","setSSHLogs","socket","on","console","log","data","prevLogs","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/simg-tour/src/components/monitor.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SSHMonitor = () => {\r\n    const [sshLogs, setSSHLogs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:4000');\r\n\r\n        socket.on('connect', () => {\r\n            console.log('Connected to server');\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n            console.log('Disconnected from server');\r\n        });\r\n\r\n        // SSH 로그 이벤트를 받아 처리하는 코드\r\n        socket.on('sshEvent', (data) => {\r\n            // 새로운 SSH 로그를 받으면 sshLogs 배열에 추가\r\n            setSSHLogs((prevLogs : any) => [...prevLogs, data]);\r\n        });\r\n\r\n        return () => {\r\n            // 컴포넌트가 언마운트될 때 소켓 연결 해제\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>SSH Monitor</h1>\r\n            <ul>\r\n                {/* sshLogs 배열에 있는 각 로그를 리스트 아이템으로 표시 */}\r\n                {sshLogs.map((log, index) => (\r\n                    <li key={index}>{log}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SSHMonitor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMS,MAAM,GAAGP,EAAE,CAAC,uBAAuB,CAAC;IAE1CO,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC,CAAC,CAAC;IAEFH,MAAM,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACC,EAAE,CAAC,UAAU,EAAGG,IAAI,IAAK;MAC5B;MACAL,UAAU,CAAEM,QAAc,IAAK,CAAC,GAAGA,QAAQ,EAAED,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC;IAEF,OAAO,MAAM;MACT;MACAJ,MAAM,CAACM,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhB,OAAA;MAAAY,QAAA,EAEKT,OAAO,CAACc,GAAG,CAAC,CAACT,GAAG,EAAEU,KAAK,kBACpBlB,OAAA;QAAAY,QAAA,EAAiBJ;MAAG,GAAXU,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CArCID,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}