{"ast":null,"code":"// 보험 나이 구하는 함수, 매개변수는 생년월일 8자리 문자열\nexport function calculateInsAge(birth) {\n  const year = birth.substring(0, 4);\n  const mth = birth.substring(4, 6);\n  const dt = birth.substring(6, 8);\n  let today = new Date();\n\n  // 보험나이는 생일에 +1일 -6개월을 하고 계산한 만나이와 동일함\n  let birthday = new Date(`${year}-${mth}-${dt}`);\n  let insBirthday = birthday;\n  insBirthday.setDate(birthday.getDate() + 1);\n  insBirthday.setMonth(birthday.getMonth() - 6);\n  const insYr = insBirthday.getFullYear();\n  const insMth = insBirthday.getMonth() + 1;\n  const insDt = insBirthday.getDate();\n  let insAge = today.getFullYear() - insYr;\n\n  // 월 비교\n  if (insMth > today.getMonth() + 2) {\n    insAge--;\n  }\n  // 일 비교\n  else if (insMth == today.getMonth() + 1 && insDt > today.getDate()) {\n    insAge--;\n  }\n  return insAge.toString();\n}","map":{"version":3,"names":["calculateInsAge","birth","year","substring","mth","dt","today","Date","birthday","insBirthday","setDate","getDate","setMonth","getMonth","insYr","getFullYear","insMth","insDt","insAge","toString"],"sources":["D:/IdeaProjects/simg-tour/src/utils/common.tsx"],"sourcesContent":["// 보험 나이 구하는 함수, 매개변수는 생년월일 8자리 문자열\r\nexport function calculateInsAge(birth : string) {\r\n    const year = birth.substring(0, 4);\r\n    const mth = birth.substring(4, 6);\r\n    const dt = birth.substring(6, 8);\r\n    let today = new Date();\r\n\r\n    // 보험나이는 생일에 +1일 -6개월을 하고 계산한 만나이와 동일함\r\n    let birthday = new Date(`${year}-${mth}-${dt}`);\r\n    let insBirthday = birthday;\r\n    insBirthday.setDate(birthday.getDate()+1)\r\n    insBirthday.setMonth(birthday.getMonth()-6);\r\n    const insYr = insBirthday.getFullYear();\r\n    const insMth = insBirthday.getMonth()+1;\r\n    const insDt = insBirthday.getDate();\r\n\r\n    let insAge = today.getFullYear() - insYr;\r\n\r\n    // 월 비교\r\n    if(insMth > (today.getMonth() + 2)){\r\n        insAge--;\r\n    }\r\n    // 일 비교\r\n    else if(insMth == (today.getMonth() + 1) && insDt > today.getDate()){\r\n        insAge--;\r\n    }\r\n\r\n    return insAge.toString();\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,eAAeA,CAACC,KAAc,EAAE;EAC5C,MAAMC,IAAI,GAAGD,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC,MAAMC,GAAG,GAAGH,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACjC,MAAME,EAAE,GAAGJ,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAChC,IAAIG,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;;EAEtB;EACA,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAAE,GAAEL,IAAK,IAAGE,GAAI,IAAGC,EAAG,EAAC,CAAC;EAC/C,IAAII,WAAW,GAAGD,QAAQ;EAC1BC,WAAW,CAACC,OAAO,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC;EACzCF,WAAW,CAACG,QAAQ,CAACJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC;EAC3C,MAAMC,KAAK,GAAGL,WAAW,CAACM,WAAW,CAAC,CAAC;EACvC,MAAMC,MAAM,GAAGP,WAAW,CAACI,QAAQ,CAAC,CAAC,GAAC,CAAC;EACvC,MAAMI,KAAK,GAAGR,WAAW,CAACE,OAAO,CAAC,CAAC;EAEnC,IAAIO,MAAM,GAAGZ,KAAK,CAACS,WAAW,CAAC,CAAC,GAAGD,KAAK;;EAExC;EACA,IAAGE,MAAM,GAAIV,KAAK,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAE,EAAC;IAC/BK,MAAM,EAAE;EACZ;EACA;EAAA,KACK,IAAGF,MAAM,IAAKV,KAAK,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAE,IAAII,KAAK,GAAGX,KAAK,CAACK,OAAO,CAAC,CAAC,EAAC;IAChEO,MAAM,EAAE;EACZ;EAEA,OAAOA,MAAM,CAACC,QAAQ,CAAC,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}