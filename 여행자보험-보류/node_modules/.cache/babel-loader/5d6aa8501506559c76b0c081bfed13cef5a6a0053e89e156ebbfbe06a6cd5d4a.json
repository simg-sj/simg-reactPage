{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\simg-tour\\\\src\\\\components\\\\inputTimePicker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport 'swiper/css';\nimport ClockIcon from '../asset/images/clock-regular.svg';\nimport { Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction inputTimePicker({\n  control,\n  name\n}) {\n  _s();\n  /*const TIME_HOURS =\r\n      [\r\n          100,130,200,230,300,330,400,430,500,530,600,630,700,730,800,830,900,930,1000,1030,1100,1130,1200,1230,1300,1330,1400,1430,1500,1530,1600,1630,1700,1730,\r\n          1800,1830,1900,1930,2000,2030,2100,2130,2200,2230,2300,2330,2400,2430\r\n      ];*/\n  const TIME_HOURS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const inputRef2 = useRef(null);\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    rules: {\n      required: true\n    },\n    control: control,\n    name: \"strDate\"\n    // render를 사용해서, field값을 복사하거나 꺼내 쓰면 된다.\n    // field안에는 value나 onBlur와 같은 함수도 있음\n    // render안의 onChange를 조작해, onChange안에 들어갈 값을\n    // 선택할 수 있다.\n    ,\n    render: ({\n      field: {\n        onChange\n      }\n    }) =>\n    /*#__PURE__*/\n    // antd의 datepicker에서 e.target.value는\n    // moment 객체 그대로를 반환하기에,\n    // \"2021-04-15\"와 같은 값을 얻고싶다면, 두번째 파라미터\n    // \"dateString\"을 추가해서 값을 넣어야 한다.\n    _jsxDEV(\"div\", {\n      className: \"w-[160px] h-[35px] relative border rounded-md mt-2 border-[#000000]/20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center py-2 px-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-[110px] ml-[5px] text-[12px] font-[400]\",\n          ref: inputRef2,\n          type: 'text',\n          placeholder: name === 'strTime' ? '출발 시간' : '도착 시간',\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-[5px]\",\n          onClick: e => console.log('show'),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ClockIcon,\n            width: '18px',\n            alt: 'clock'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 123\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(inputTimePicker, \"5Jo4r3cxB26jqw5ckWahqKwWPLo=\");\n;\nexport default inputTimePicker;","map":{"version":3,"names":["React","useRef","ClockIcon","Controller","jsxDEV","_jsxDEV","inputTimePicker","control","name","_s","TIME_HOURS","inputRef2","rules","required","render","field","onChange","className","children","ref","type","placeholder","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","console","log","src","width","alt"],"sources":["D:/IdeaProjects/simg-tour/src/components/inputTimePicker.tsx"],"sourcesContent":["import React, {useRef} from 'react';\r\nimport 'swiper/css';\r\nimport ClockIcon from '../asset/images/clock-regular.svg';\r\nimport XIcon from '../asset/images/xmark-solid.svg';\r\nimport {Controller} from \"react-hook-form\";\r\nfunction inputTimePicker({ control, name } : any ) {\r\n    /*const TIME_HOURS =\r\n        [\r\n            100,130,200,230,300,330,400,430,500,530,600,630,700,730,800,830,900,930,1000,1030,1100,1130,1200,1230,1300,1330,1400,1430,1500,1530,1600,1630,1700,1730,\r\n            1800,1830,1900,1930,2000,2030,2100,2130,2200,2230,2300,2330,2400,2430\r\n        ];*/\r\n    const TIME_HOURS = [\r\n        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\r\n    ]\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const inputRef2 = useRef<HTMLInputElement>(null);\r\n\r\n    return (\r\n        <Controller\r\n        rules={{ required: true}}\r\n        control={control}\r\n        name='strDate'\r\n        // render를 사용해서, field값을 복사하거나 꺼내 쓰면 된다.\r\n        // field안에는 value나 onBlur와 같은 함수도 있음\r\n        // render안의 onChange를 조작해, onChange안에 들어갈 값을\r\n        // 선택할 수 있다.\r\n        render={({ field: { onChange } }) => (\r\n            // antd의 datepicker에서 e.target.value는\r\n            // moment 객체 그대로를 반환하기에,\r\n            // \"2021-04-15\"와 같은 값을 얻고싶다면, 두번째 파라미터\r\n            // \"dateString\"을 추가해서 값을 넣어야 한다.\r\n            <div className='w-[160px] h-[35px] relative border rounded-md mt-2 border-[#000000]/20'>\r\n                <div className='flex items-center py-2 px-2'>\r\n                    <input className='w-[110px] ml-[5px] text-[12px] font-[400]' ref={inputRef2} type={'text'}  placeholder={name === 'strTime' ? '출발 시간' : '도착 시간'}   readOnly={true} />\r\n                    <button className='ml-[5px]' onClick={(e:React.MouseEvent<HTMLButtonElement>)=> console.log('show')}> <img src={ClockIcon} width={'18px'} alt={'clock'}/> </button>\r\n                </div>\r\n            </div>\r\n        )}\r\n    />\r\n    );\r\n};\r\n\r\nexport default inputTimePicker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,QAAO,OAAO;AACnC,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,mCAAmC;AAEzD,SAAQC,UAAU,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,SAASC,eAAeA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAG;EAAAC,EAAA;EAC/C;AACJ;AACA;AACA;AACA;EACI,MAAMC,UAAU,GAAG,CACf,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CACjE;EACD;EACA,MAAMC,SAAS,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAEhD,oBACII,OAAA,CAACF,UAAU;IACXS,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAE;IACzBN,OAAO,EAAEA,OAAQ;IACjBC,IAAI,EAAC;IACL;IACA;IACA;IACA;IAAA;IACAM,MAAM,EAAEA,CAAC;MAAEC,KAAK,EAAE;QAAEC;MAAS;IAAE,CAAC;IAAA;IAC5B;IACA;IACA;IACA;IACAX,OAAA;MAAKY,SAAS,EAAC,wEAAwE;MAAAC,QAAA,eACnFb,OAAA;QAAKY,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBACxCb,OAAA;UAAOY,SAAS,EAAC,2CAA2C;UAACE,GAAG,EAAER,SAAU;UAACS,IAAI,EAAE,MAAO;UAAEC,WAAW,EAAEb,IAAI,KAAK,SAAS,GAAG,OAAO,GAAG,OAAQ;UAAGc,QAAQ,EAAE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrKrB,OAAA;UAAQY,SAAS,EAAC,UAAU;UAACU,OAAO,EAAGC,CAAqC,IAAIC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAE;UAAAZ,QAAA,GAAC,GAAC,eAAAb,OAAA;YAAK0B,GAAG,EAAE7B,SAAU;YAAC8B,KAAK,EAAE,MAAO;YAACC,GAAG,EAAE;UAAQ;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEN;AAACjB,EAAA,CAnCQH,eAAe;AAmCvB;AAED,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}