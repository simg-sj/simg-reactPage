{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\simg-tour\\\\src\\\\components\\\\time.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport 'swiper/css';\nimport ClockIcon from '../asset/images/clock-regular.svg';\nimport XIcon from '../asset/images/xmark-solid.svg';\nimport { useController } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Time({\n  control,\n  name\n}) {\n  _s();\n  const {\n    field\n  } = useController({\n    name,\n    control,\n    rules: {\n      required: true\n    }\n  });\n  const showRef = useRef(null);\n  /*const TIME_HOURS =\r\n      [\r\n          100,130,200,230,300,330,400,430,500,530,600,630,700,730,800,830,900,930,1000,1030,1100,1130,1200,1230,1300,1330,1400,1430,1500,1530,1600,1630,1700,1730,\r\n          1800,1830,1900,1930,2000,2030,2100,2130,2200,2230,2300,2330,2400,2430\r\n      ];*/\n  const TIME_HOURS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n  const inputRef = useRef(null);\n  const [hours, setHours] = useState(0);\n  const [open, setOpen] = useState(false);\n  // eslint-disable-next-line\n  const onClickHandler = hour => {\n    let temp = (hour + \"\").padStart(2, \"0\").substring(0, 2) + ':00';\n    if (inputRef.current) console.log(\"@@\") /*field.onChange(temp)*/;\n    setOpen(false);\n  };\n  const onShowButton = type => {\n    if (showRef.current) {\n      if (type === 'show') {\n        showRef.current.style.setProperty('display', 'block');\n      }\n      if (type === 'close') showRef.current.style.setProperty('display', 'none');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[160px] h-[35px] relative border rounded-md mt-2 border-[#000000]/20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center py-2 px-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-[110px] ml-[5px] text-[12px] font-[400]\",\n        ref: inputRef,\n        type: 'text',\n        placeholder: name === 'strTime' ? '출발 시간' : '도착 시간',\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-[5px]\",\n        onClick: e => onShowButton('show'),\n        children: !open ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ClockIcon,\n          width: '18px',\n          alt: 'clock'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 128\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ml-1\",\n          src: XIcon,\n          width: '14px',\n          alt: 'xmark'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 182\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Time, \"CZ8vTQqTZUNkV/m1Fn50Of7iulQ=\", false, function () {\n  return [useController];\n});\n_c = Time;\n;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["React","useRef","useState","ClockIcon","XIcon","useController","jsxDEV","_jsxDEV","Time","control","name","_s","field","rules","required","showRef","TIME_HOURS","inputRef","hours","setHours","open","setOpen","onClickHandler","hour","temp","padStart","substring","current","console","log","onShowButton","type","style","setProperty","className","children","ref","placeholder","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","src","width","alt","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/simg-tour/src/components/time.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/css';\r\nimport { Mousewheel } from 'swiper/modules';\r\nimport {cls} from \"../hooks/utils\";\r\nimport ClockIcon from '../asset/images/clock-regular.svg';\r\nimport XIcon from '../asset/images/xmark-solid.svg';\r\nimport {useController} from \"react-hook-form\";\r\nfunction Time({ control, name } : any ) {\r\n    const {\r\n        field\r\n    } = useController({\r\n        name,\r\n        control,\r\n        rules: { required: true },\r\n    });\r\n    const showRef = useRef<HTMLDivElement>(null)\r\n    /*const TIME_HOURS =\r\n        [\r\n            100,130,200,230,300,330,400,430,500,530,600,630,700,730,800,830,900,930,1000,1030,1100,1130,1200,1230,1300,1330,1400,1430,1500,1530,1600,1630,1700,1730,\r\n            1800,1830,1900,1930,2000,2030,2100,2130,2200,2230,2300,2330,2400,2430\r\n        ];*/\r\n    const TIME_HOURS = [\r\n        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\r\n    ]\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [hours, setHours] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n    // eslint-disable-next-line\r\n    const onClickHandler = (hour : string) => {\r\n        let temp = (hour+\"\").padStart(2,\"0\").substring(0,2)+':00';\r\n        if (inputRef.current) console.log(\"@@\")/*field.onChange(temp)*/;\r\n        setOpen(false);\r\n    }\r\n    const onShowButton = (type : string) => {\r\n        if(showRef.current) {\r\n            if(type === 'show') {\r\n                showRef.current.style.setProperty('display', 'block');\r\n            }\r\n            if(type === 'close') showRef.current.style.setProperty('display', 'none');\r\n        }\r\n    }\r\n    return (\r\n        <div className='w-[160px] h-[35px] relative border rounded-md mt-2 border-[#000000]/20'>\r\n            <div className='flex items-center py-2 px-2'>\r\n                <input className='w-[110px] ml-[5px] text-[12px] font-[400]' ref={inputRef} type={'text'}  placeholder={name === 'strTime' ? '출발 시간' : '도착 시간'}   readOnly={true} />\r\n                <button className='ml-[5px]' onClick={(e:React.MouseEvent<HTMLButtonElement>)=> onShowButton('show')}>{!open ? <img src={ClockIcon} width={'18px'} alt={'clock'}/> : <img className='ml-1' src={XIcon} width={'14px'} alt={'xmark'}/>}</button>\r\n            </div>\r\n                \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Time;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}