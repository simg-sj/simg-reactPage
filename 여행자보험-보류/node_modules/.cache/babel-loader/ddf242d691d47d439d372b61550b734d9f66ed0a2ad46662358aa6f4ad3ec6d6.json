{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\simg-tour\\\\src\\\\components\\\\selectGender.tsx\",\n  _s2 = $RefreshSig$();\nimport { useController } from \"react-hook-form\";\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectGender({\n  control\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  // control이 변경될 때만 useController를 호출하기 위한 useEffect\n  _s(useEffect(_s(() => {\n    _s();\n    // useController에 필요한 값들을 설정\n    const {\n      field\n    } = useController({\n      control,\n      name: 'genders'\n    });\n\n    // 여기에서 필요한 로직을 수행\n\n    // return cleanup 함수 (옵션)\n    return () => {\n      // 이 부분에서 정리(clean-up) 로직을 추가할 수 있습니다.\n      // 예: 이벤트 리스너 해제 등\n    };\n  }, \"gUZ3Ob/VvDWs4U26ZvvoJev34MQ=\", false, function () {\n    return [useController];\n  }), [control]), \"gUZ3Ob/VvDWs4U26ZvvoJev34MQ=\", false, function () {\n    return [useController];\n  }); // control이 변경될 때만 useEffect가 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[100px] h-[30px] border ml-6 rounded-xl bg-[#D9D9D9] \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex items-center justify-center h-full text-[13px] font-semibold font-['Hack-Bold']\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: field.value === 'male' ? 'genderBtnOn' : 'genderBtnOff',\n        onClick: () => field.onChange('male'),\n        children: \"\\uB0A8\\uC790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: field.value === 'female' ? 'genderBtnOn' : 'genderBtnOff',\n        onClick: () => field.onChange('female'),\n        children: \"\\uC5EC\\uC790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s2(SelectGender, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SelectGender;\nexport default SelectGender;\nvar _c;\n$RefreshReg$(_c, \"SelectGender\");","map":{"version":3,"names":["useController","React","useEffect","jsxDEV","_jsxDEV","SelectGender","control","_s2","_s","$RefreshSig$","field","name","className","children","value","onClick","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/simg-tour/src/components/selectGender.tsx"],"sourcesContent":["import { useController } from \"react-hook-form\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nfunction SelectGender({ control }: any) {\r\n    // control이 변경될 때만 useController를 호출하기 위한 useEffect\r\n    useEffect(() => {\r\n        // useController에 필요한 값들을 설정\r\n        const { field } = useController({ control, name: 'genders' });\r\n\r\n        // 여기에서 필요한 로직을 수행\r\n\r\n        // return cleanup 함수 (옵션)\r\n        return () => {\r\n            // 이 부분에서 정리(clean-up) 로직을 추가할 수 있습니다.\r\n            // 예: 이벤트 리스너 해제 등\r\n        };\r\n    }, [control]); // control이 변경될 때만 useEffect가 실행\r\n\r\n    return (\r\n        <div className='w-[100px] h-[30px] border ml-6 rounded-xl bg-[#D9D9D9] '>\r\n            <div className=\"w-full flex items-center justify-center h-full text-[13px] font-semibold font-['Hack-Bold']\">\r\n                {/* 나머지 코드는 이전과 동일 */}\r\n                <button\r\n                    className={field.value === 'male' ? 'genderBtnOn' : 'genderBtnOff'}\r\n                    onClick={() => field.onChange('male')}\r\n                >\r\n                    남자\r\n                </button>\r\n                <button\r\n                    className={field.value === 'female' ? 'genderBtnOn' : 'genderBtnOff'}\r\n                    onClick={() => field.onChange('female')}\r\n                >\r\n                    여자\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectGender;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,YAAYA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACpC;EACAD,EAAA,CAAAN,SAAS,CAAAM,EAAA,CAAC,MAAM;IAAAA,EAAA;IACZ;IACA,MAAM;MAAEE;IAAM,CAAC,GAAGV,aAAa,CAAC;MAAEM,OAAO;MAAEK,IAAI,EAAE;IAAU,CAAC,CAAC;;IAE7D;;IAEA;IACA,OAAO,MAAM;MACT;MACA;IAAA,CACH;EACL,CAAC;IAAA,QATqBX,aAAa;EAAA,IAShC,CAACM,OAAO,CAAC,CAAC;IAAA,QATSN,aAAa;EAAA,GASrB,CAAC;;EAEf,oBACII,OAAA;IAAKQ,SAAS,EAAC,yDAAyD;IAAAC,QAAA,eACpET,OAAA;MAAKQ,SAAS,EAAC,6FAA6F;MAAAC,QAAA,gBAExGT,OAAA;QACIQ,SAAS,EAAEF,KAAK,CAACI,KAAK,KAAK,MAAM,GAAG,aAAa,GAAG,cAAe;QACnEC,OAAO,EAAEA,CAAA,KAAML,KAAK,CAACM,QAAQ,CAAC,MAAM,CAAE;QAAAH,QAAA,EACzC;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThB,OAAA;QACIQ,SAAS,EAAEF,KAAK,CAACI,KAAK,KAAK,QAAQ,GAAG,aAAa,GAAG,cAAe;QACrEC,OAAO,EAAEA,CAAA,KAAML,KAAK,CAACM,QAAQ,CAAC,QAAQ,CAAE;QAAAH,QAAA,EAC3C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACb,GAAA,CAlCQF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAoCrB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}