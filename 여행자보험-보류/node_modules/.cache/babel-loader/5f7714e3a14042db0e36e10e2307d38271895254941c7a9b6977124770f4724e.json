{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\simg-tour\\\\src\\\\components\\\\inputTimePicker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport 'swiper/css';\nimport ClockIcon from '../asset/images/clock-regular.svg';\nimport XIcon from '../asset/images/xmark-solid.svg';\nimport { Controller, useController } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction inputTimePicker({\n  control,\n  name\n}) {\n  _s();\n  const {\n    field\n  } = useController({\n    name,\n    control,\n    rules: {\n      required: true\n    }\n  });\n  const showRef = useRef(null);\n  /*const TIME_HOURS =\r\n      [\r\n          100,130,200,230,300,330,400,430,500,530,600,630,700,730,800,830,900,930,1000,1030,1100,1130,1200,1230,1300,1330,1400,1430,1500,1530,1600,1630,1700,1730,\r\n          1800,1830,1900,1930,2000,2030,2100,2130,2200,2230,2300,2330,2400,2430\r\n      ];*/\n  const TIME_HOURS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n  const inputRef = useRef(null);\n  const [hours, setHours] = useState(0);\n  const [open, setOpen] = useState(false);\n  // eslint-disable-next-line\n  const onClickHandler = hour => {\n    let temp = (hour + \"\").padStart(2, \"0\").substring(0, 2) + ':00';\n    if (inputRef.current) console.log(\"@@\") /*field.onChange(temp)*/;\n    setOpen(false);\n  };\n  const onShowButton = type => {\n    if (showRef.current) {\n      if (type === 'show') {\n        showRef.current.style.setProperty('display', 'block');\n      }\n      if (type === 'close') showRef.current.style.setProperty('display', 'none');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    rules: {\n      required: true\n    },\n    control: control,\n    name: \"strDate\"\n    // render를 사용해서, field값을 복사하거나 꺼내 쓰면 된다.\n    // field안에는 value나 onBlur와 같은 함수도 있음\n    // render안의 onChange를 조작해, onChange안에 들어갈 값을\n    // 선택할 수 있다.\n    ,\n    render: ({\n      field: {\n        onChange\n      }\n    }) =>\n    /*#__PURE__*/\n    // antd의 datepicker에서 e.target.value는\n    // moment 객체 그대로를 반환하기에,\n    // \"2021-04-15\"와 같은 값을 얻고싶다면, 두번째 파라미터\n    // \"dateString\"을 추가해서 값을 넣어야 한다.\n    _jsxDEV(\"div\", {\n      className: \"w-[160px] h-[35px] relative border rounded-md mt-2 border-[#000000]/20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center py-2 px-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-[110px] ml-[5px] text-[12px] font-[400]\",\n          ref: inputRef,\n          type: 'text',\n          placeholder: name === 'strTime' ? '출발 시간' : '도착 시간',\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-[5px]\",\n          onClick: e => onShowButton('show'),\n          children: !open ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ClockIcon,\n            width: '18px',\n            alt: 'clock'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 132\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"ml-1\",\n            src: XIcon,\n            width: '14px',\n            alt: 'xmark'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 186\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n}\n_s(inputTimePicker, \"CZ8vTQqTZUNkV/m1Fn50Of7iulQ=\", false, function () {\n  return [useController];\n});\n;\nexport default inputTimePicker;","map":{"version":3,"names":["React","useRef","useState","ClockIcon","XIcon","Controller","useController","jsxDEV","_jsxDEV","inputTimePicker","control","name","_s","field","rules","required","showRef","TIME_HOURS","inputRef","hours","setHours","open","setOpen","onClickHandler","hour","temp","padStart","substring","current","console","log","onShowButton","type","style","setProperty","render","onChange","className","children","ref","placeholder","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","src","width","alt"],"sources":["D:/IdeaProjects/simg-tour/src/components/inputTimePicker.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/css';\r\nimport { Mousewheel } from 'swiper/modules';\r\nimport {cls} from \"../hooks/utils\";\r\nimport ClockIcon from '../asset/images/clock-regular.svg';\r\nimport XIcon from '../asset/images/xmark-solid.svg';\r\nimport {Controller, useController} from \"react-hook-form\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {ThemeProvider} from \"@mui/material/styles\";\r\nimport {DesktopDatePicker} from \"@mui/x-date-pickers/DesktopDatePicker\";\r\nimport dayjs, {Dayjs} from \"dayjs\";\r\nfunction inputTimePicker({ control, name } : any ) {\r\n    const {\r\n        field\r\n    } = useController({\r\n        name,\r\n        control,\r\n        rules: { required: true },\r\n    });\r\n    const showRef = useRef<HTMLDivElement>(null)\r\n    /*const TIME_HOURS =\r\n        [\r\n            100,130,200,230,300,330,400,430,500,530,600,630,700,730,800,830,900,930,1000,1030,1100,1130,1200,1230,1300,1330,1400,1430,1500,1530,1600,1630,1700,1730,\r\n            1800,1830,1900,1930,2000,2030,2100,2130,2200,2230,2300,2330,2400,2430\r\n        ];*/\r\n    const TIME_HOURS = [\r\n        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\r\n    ]\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [hours, setHours] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n    // eslint-disable-next-line\r\n    const onClickHandler = (hour : string) => {\r\n        let temp = (hour+\"\").padStart(2,\"0\").substring(0,2)+':00';\r\n        if (inputRef.current) console.log(\"@@\")/*field.onChange(temp)*/;\r\n        setOpen(false);\r\n    }\r\n    const onShowButton = (type : string) => {\r\n        if(showRef.current) {\r\n            if(type === 'show') {\r\n                showRef.current.style.setProperty('display', 'block');\r\n            }\r\n            if(type === 'close') showRef.current.style.setProperty('display', 'none');\r\n        }\r\n    }\r\n    return (<Controller\r\n        rules={{ required: true}}\r\n        control={control}\r\n        name='strDate'\r\n        // render를 사용해서, field값을 복사하거나 꺼내 쓰면 된다.\r\n        // field안에는 value나 onBlur와 같은 함수도 있음\r\n        // render안의 onChange를 조작해, onChange안에 들어갈 값을\r\n        // 선택할 수 있다.\r\n        render={({ field: { onChange } }) => (\r\n            // antd의 datepicker에서 e.target.value는\r\n            // moment 객체 그대로를 반환하기에,\r\n            // \"2021-04-15\"와 같은 값을 얻고싶다면, 두번째 파라미터\r\n            // \"dateString\"을 추가해서 값을 넣어야 한다.\r\n            <div className='w-[160px] h-[35px] relative border rounded-md mt-2 border-[#000000]/20'>\r\n                <div className='flex items-center py-2 px-2'>\r\n                    <input className='w-[110px] ml-[5px] text-[12px] font-[400]' ref={inputRef} type={'text'}  placeholder={name === 'strTime' ? '출발 시간' : '도착 시간'}   readOnly={true} />\r\n                    <button className='ml-[5px]' onClick={(e:React.MouseEvent<HTMLButtonElement>)=> onShowButton('show')}>{!open ? <img src={ClockIcon} width={'18px'} alt={'clock'}/> : <img className='ml-1' src={XIcon} width={'14px'} alt={'xmark'}/>}</button>\r\n                </div>\r\n            </div>\r\n        )}\r\n    />\r\n    );\r\n};\r\n\r\nexport default inputTimePicker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}