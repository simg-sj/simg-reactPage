{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\inputs\\\\nameInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NameInput = props => {\n  _s();\n  const [name, setName] = useState('');\n  const [check, setCheck] = useState(false);\n  const onChangeHandler = e => {\n    const nameRegex = /^[ㄱ-ㅎ가-힣a-zA-Z]+$/;\n    setName(e.currentTarget.value);\n    if (nameRegex.test(name)) {\n      setCheck(true);\n    } else {\n      setCheck(false);\n    }\n  };\n  useEffect(() => {\n    if (check) {\n      props.setInfo(prevState => {\n        return {\n          ...prevState,\n          cName: name\n        };\n      });\n    }\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col pb-4 w-full items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub_title ml-10 mt-1 basis-1/3\",\n        children: \"\\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'text',\n        onChange: onChangeHandler,\n        className: \"input  basis-/3\",\n        placeholder: \"\\uAE30\\uC0AC \\uC131\\uBA85\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), !check && name !== '' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-red-500 text-[11px] pt-2 pl-2\",\n      children: \"\\uC774\\uB984\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(NameInput, \"JCwp3RyJdTgYzhoxJn2B38dRdAw=\");\n_c = NameInput;\nexport default NameInput;\nvar _c;\n$RefreshReg$(_c, \"NameInput\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NameInput","props","_s","name","setName","check","setCheck","onChangeHandler","e","nameRegex","currentTarget","value","test","setInfo","prevState","cName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/connect_onna/src/components/atoms/inputs/nameInput.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {InfoProps} from \"./carNumInput\";\r\n\r\nconst NameInput = (props : {info : InfoProps, setInfo : React.Dispatch<React.SetStateAction<InfoProps>>}  ) => {\r\n    const [name , setName] = useState<string>('');\r\n    const [check, setCheck] = useState<boolean>(false);\r\n    const onChangeHandler = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        const nameRegex = /^[ㄱ-ㅎ가-힣a-zA-Z]+$/;\r\n        setName(e.currentTarget.value);\r\n        if(nameRegex.test(name)){\r\n            setCheck(true);\r\n        }else {\r\n            setCheck(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(check){\r\n            props.setInfo((prevState) => {\r\n                return { ...prevState, cName: name }\r\n            });\r\n        }\r\n    }, [name]);\r\n    return(\r\n        <div className='flex flex-col pb-4 w-full items-center justify-center'>\r\n            <div className='flex'>\r\n                <div className='sub_title ml-10 mt-1 basis-1/3'>\r\n                    이름\r\n                </div>\r\n                <input type={'text'} onChange={onChangeHandler} className='input  basis-/3' placeholder='기사 성명'/>\r\n            </div>\r\n            {!check && name !== '' && <h2 className='text-red-500 text-[11px] pt-2 pl-2'>이름을 확인해주세요.</h2>}\r\n        </div>\r\n    )\r\n}\r\nexport default NameInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,SAAS,GAAIC,KAAqF,IAAO;EAAAC,EAAA;EAC3G,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EAClD,MAAMU,eAAe,GAAIC,CAAuC,IAAK;IACjE,MAAMC,SAAS,GAAG,mBAAmB;IACrCL,OAAO,CAACI,CAAC,CAACE,aAAa,CAACC,KAAK,CAAC;IAC9B,IAAGF,SAAS,CAACG,IAAI,CAACT,IAAI,CAAC,EAAC;MACpBG,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,MAAK;MACFA,QAAQ,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;EACDV,SAAS,CAAC,MAAM;IACZ,IAAGS,KAAK,EAAC;MACLJ,KAAK,CAACY,OAAO,CAAEC,SAAS,IAAK;QACzB,OAAO;UAAE,GAAGA,SAAS;UAAEC,KAAK,EAAEZ;QAAK,CAAC;MACxC,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EACV,oBACIJ,OAAA;IAAKiB,SAAS,EAAC,uDAAuD;IAAAC,QAAA,gBAClElB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBlB,OAAA;QAAKiB,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAEhD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNtB,OAAA;QAAOuB,IAAI,EAAE,MAAO;QAACC,QAAQ,EAAEhB,eAAgB;QAACS,SAAS,EAAC,iBAAiB;QAACQ,WAAW,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG,CAAC,EACL,CAAChB,KAAK,IAAIF,IAAI,KAAK,EAAE,iBAAIJ,OAAA;MAAIiB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAEd,CAAC;AAAAnB,EAAA,CA9BKF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}