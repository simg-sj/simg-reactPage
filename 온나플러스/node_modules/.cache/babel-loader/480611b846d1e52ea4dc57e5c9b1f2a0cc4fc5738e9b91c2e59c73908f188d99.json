{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uAE30\\uB355\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\inputs\\\\nameInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NameInput = props => {\n  _s();\n  const [name, setName] = useState('');\n  const [check, setCheck] = useState(false);\n  const onChangeHandler = e => {\n    const {\n      value\n    } = e.target;\n    const nameRegex = /^[ㄱ-ㅎ가-힣a-zA-Z]+$/;\n    setName(value);\n    if (nameRegex.test(value)) {\n      setCheck(true);\n      const temp = (key, value) => {\n        setCondition(current => {\n          let newCondition = {\n            ...current\n          };\n          newCondition[key] = value;\n          return newCondition;\n        });\n      };\n    } else {\n      setCheck(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-8 flex flex-col pb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub_title pb-1 pl-2\",\n      children: \"\\uC774\\uB984\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      onChange: e => onChangeHandler(e),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), !check && name !== '' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-red-500 text-[11px] pt-2\",\n      children: \"\\uC774\\uB984\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(NameInput, \"FR9Yu6GpxQih7RMjJs1ElvOGyOw=\");\n_c = NameInput;\nexport default NameInput;\nvar _c;\n$RefreshReg$(_c, \"NameInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NameInput","props","_s","name","setName","check","setCheck","onChangeHandler","e","value","target","nameRegex","test","temp","key","setCondition","current","newCondition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/inputs/nameInput.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { produce } from \"immer\";\r\n\r\ntype InfoProps = {\r\n    bpk : string,\r\n    cName : string,\r\n    cCell : string,\r\n    cJumin : string,\r\n    cMail : string,\r\n    cPost : string,\r\n    cAddr1 : string,\r\n    cAddr2 : string,\r\n    cJob : string,\r\n    carNm : string,\r\n    carUse : string,\r\n}\r\nconst NameInput = (props : {info : InfoProps, setInfo : React.Dispatch<React.SetStateAction<InfoProps>>}  ) => {\r\n    const [name , setName] = useState<string>('');\r\n    const [check, setCheck] = useState<boolean>(false);\r\n    const onChangeHandler = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        const {value} = e.target;\r\n        const nameRegex = /^[ㄱ-ㅎ가-힣a-zA-Z]+$/;\r\n        setName(value);\r\n        if(nameRegex.test(value)){\r\n            setCheck(true);\r\n            const temp = (key, value) => {\r\n                setCondition((current) => {\r\n                    let newCondition = { ...current };\r\n                    newCondition[key] = value;\r\n                    return newCondition;\r\n                });\r\n            };\r\n        }else {\r\n            setCheck(false);\r\n        }\r\n    }\r\n    return(\r\n        <div className='pt-8 flex flex-col pb-8'>\r\n            <div className='sub_title pb-1 pl-2'>\r\n                이름\r\n            </div>\r\n            <input type={'text'} onChange={(e)=>onChangeHandler(e)} className='input'/>\r\n            {!check && name !== '' && <h2 className='text-red-500 text-[11px] pt-2'>이름을 확인해주세요.</h2>}\r\n        </div>\r\n    )\r\n}\r\nexport default NameInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBtC,MAAMC,SAAS,GAAIC,KAAqF,IAAO;EAAAC,EAAA;EAC3G,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EAClD,MAAMU,eAAe,GAAIC,CAAuC,IAAK;IACjE,MAAM;MAACC;IAAK,CAAC,GAAGD,CAAC,CAACE,MAAM;IACxB,MAAMC,SAAS,GAAG,mBAAmB;IACrCP,OAAO,CAACK,KAAK,CAAC;IACd,IAAGE,SAAS,CAACC,IAAI,CAACH,KAAK,CAAC,EAAC;MACrBH,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMO,IAAI,GAAGA,CAACC,GAAG,EAAEL,KAAK,KAAK;QACzBM,YAAY,CAAEC,OAAO,IAAK;UACtB,IAAIC,YAAY,GAAG;YAAE,GAAGD;UAAQ,CAAC;UACjCC,YAAY,CAACH,GAAG,CAAC,GAAGL,KAAK;UACzB,OAAOQ,YAAY;QACvB,CAAC,CAAC;MACN,CAAC;IACL,CAAC,MAAK;MACFX,QAAQ,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;EACD,oBACIP,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCpB,OAAA;MAAKmB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAErC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAOyB,IAAI,EAAE,MAAO;MAACC,QAAQ,EAAGjB,CAAC,IAAGD,eAAe,CAACC,CAAC,CAAE;MAACU,SAAS,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC1E,CAAClB,KAAK,IAAIF,IAAI,KAAK,EAAE,iBAAIJ,OAAA;MAAImB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEd,CAAC;AAAArB,EAAA,CA7BKF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}