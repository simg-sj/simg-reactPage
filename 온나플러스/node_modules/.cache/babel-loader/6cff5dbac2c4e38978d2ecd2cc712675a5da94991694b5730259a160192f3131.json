{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uAE30\\uB355\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\registerButton.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { sendJoin } from \"../../pages/api/sendJoin\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterButton = props => {\n  _s();\n  const page = useNavigate();\n  const [msg, setMsg] = useState('');\n  const [flag, setFlag] = useState(false);\n  const [errMsg, setErrMsg] = useState(false);\n  const keys = useSelector(state => state.userInfo.keys);\n  const customStyles = {\n    overlay: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    content: {\n      left: \"50%\",\n      margin: \"auto\",\n      width: \"350px\",\n      height: \"200px\",\n      padding: \"0\",\n      overflow: \"hidden\",\n      transform: \"translate(-50%,0)\"\n    }\n  };\n  const onClickHandler = e => {\n    let {\n      id\n    } = e.target;\n    let text = '';\n    if (id === 'reg') {\n      let idx;\n      let check = '';\n      if (keys === 'onna' || keys === 'enuri' || keys === 'barico') {\n        for (idx in props.info) {\n          console.log(idx);\n          if (props.info[idx] === '' || props.info[idx] === false) {\n            check = idx;\n            console.log(props.info[idx]);\n            console.log(check);\n            if (check === 'cName') text = '이름을 입력해주세요.';\n            if (check === 'cJumin') text = '주민번호를 입력해주세요.';\n            if (check === 'cCell') text = '핸드폰번호를 입력해주세요.';\n            if (check === 'cCheck') text = '필수 확인사항, 약관에 동의해주세요.';\n            break;\n          }\n          /*if(props.info[idx] === '' && idx !== 'cMail' && props.info[idx] !== 'Y'){\r\n              check = idx;\r\n              if(check === 'bpk') text = '업체를 선택해주세요.';\r\n              if(check === 'cName') text = '이름을 입력해주세요.';\r\n              if(check === 'cCell') text = '전화번호를 입력해주세요.';\r\n              if(check === 'cJumin') text = '주민번호를 입력해주세요.';\r\n              if(check === 'cPost') text = '주소를 입력해주세요.';\r\n              if(check === 'cAddr1') text = '주소1을 입력해주세요.';\r\n              if(check === 'cAddr2') text = '주소2를 입력해주세요.';\r\n              if(check === 'cJobN') text = '직장명을 입력해주세요.';\r\n              if(check === 'cCarCc') text = '배기량을 입력해주세요.';\r\n              if(check === 'cUseN') text = '운전경력을 입력해주세요.';\r\n              if(check === 'cJobLocal') text = '근무지역을 입력해주세요.';\r\n              if(check === 'cMoney') text = '월소득을 입력해주세요.';\r\n              if(check === 'cDrink') text = '음주여부를 입력해주세요.';\r\n              if(check === 'cWeekD') text = '음주횟수를 입력해주세요.';\r\n              if(check === 'cOneD') text = '주량을 입력해주세요.';\r\n              if(check === 'cSmoke') text = '흡연여부를 입력해주세요.';\r\n              if(check === 'cWeekS') text = '흡연량를 입력해주세요.';\r\n              if(check === 'cOneS') text = '흡연기간을 입력해주세요.';\r\n              if(check === 'cHeight') text = '주소를 입력해주세요.';\r\n              if(check === 'cWeight') text = '몸무게를 입력해주세요.';\r\n              if(check === 'cBank') text = '은행명을 입력해주세요.';\r\n              if(check === 'cAccount') text = '계좌번호를 입력해주세요.';\r\n              if(check === 'cPayDt') text = '납입 일자를 선택해주세요.';\r\n              break;\r\n          }*/\n        }\n\n        if (check === '') {\n          sendJoin(props.info).then(res => {\n            console.log(res);\n            if (res.status === 200) {\n              setFlag(true);\n              alert(\"감사합니다!\\n이륜차 운전자 보험 가입 신청이 완료되었습니다. \\n 기입해주신 번호로 담당자가 곧 연락드릴 예정입니다\");\n            } else {\n              alert(res.msg);\n            }\n          });\n        }\n      } else {\n        alert(text);\n      }\n    } else {\n      text = 'URL 주소를 확인해주세요.';\n      alert(text);\n    }\n    if (id === 'confirm') {\n      page('/');\n    }\n  };\n  useEffect(() => {}, [props.info]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full pb-[170px]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border  mx-8 my-8 py-[10px] px-4 rounded-lg bg-[#0e47a1] text-white font-bold text-[14px] flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: 'reg',\n        className: \"w-full\",\n        onClick: onClickHandler,\n        children: \"\\uC2E0\\uCCAD\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterButton, \"MIamc/tXpP/WYyQ/E9s9HphxBQg=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = RegisterButton;\nexport default RegisterButton;\nvar _c;\n$RefreshReg$(_c, \"RegisterButton\");","map":{"version":3,"names":["useNavigate","React","useEffect","useState","sendJoin","useSelector","jsxDEV","_jsxDEV","RegisterButton","props","_s","page","msg","setMsg","flag","setFlag","errMsg","setErrMsg","keys","state","userInfo","customStyles","overlay","backgroundColor","content","left","margin","width","height","padding","overflow","transform","onClickHandler","e","id","target","text","idx","check","info","console","log","then","res","status","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/registerButton.tsx"],"sourcesContent":["import {useNavigate} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {sendJoin} from \"../../pages/api/sendJoin\";\r\nimport Modal from \"react-modal\";\r\nimport {InfoProps} from \"./inputs/carNumInput\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../pages/reducers\";\r\n\r\nconst RegisterButton = (props : {info : InfoProps} ) => {\r\n    const page = useNavigate();\r\n    const [msg, setMsg] = useState<string>('');\r\n    const [flag, setFlag] = useState<boolean>(false);\r\n    const [errMsg, setErrMsg] = useState<boolean>(false);\r\n    const  keys : string     = useSelector((state : RootState ) => state.userInfo.keys);\r\n    const customStyles = {\r\n        overlay: {\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        },\r\n        content: {\r\n            left: \"50%\",\r\n            margin: \"auto\",\r\n            width: \"350px\",\r\n            height: \"200px\",\r\n            padding: \"0\",\r\n            overflow: \"hidden\",\r\n            transform : \"translate(-50%,0)\"\r\n        },\r\n    };\r\n    const onClickHandler = (e : React.MouseEvent<HTMLElement>) => {\r\n        let { id } : any = e.target;\r\n        let text = '';\r\n        if(id === 'reg'){\r\n            let idx: keyof typeof props.info;\r\n            let check : string = '';\r\n            if (keys === 'onna' ||keys === 'enuri' || keys === 'barico') {\r\n\r\n                for(idx in props.info){\r\n                    console.log(idx);\r\n                    if(props.info[idx] === '' || props.info[idx] === false){\r\n                        check = idx;\r\n                        console.log(props.info[idx])\r\n                        console.log(check)\r\n                        if(check === 'cName') text = '이름을 입력해주세요.';\r\n                        if(check === 'cJumin') text = '주민번호를 입력해주세요.';\r\n                        if(check === 'cCell') text = '핸드폰번호를 입력해주세요.';\r\n                        if(check === 'cCheck') text = '필수 확인사항, 약관에 동의해주세요.';\r\n                        break;\r\n                    }\r\n                    /*if(props.info[idx] === '' && idx !== 'cMail' && props.info[idx] !== 'Y'){\r\n                        check = idx;\r\n                        if(check === 'bpk') text = '업체를 선택해주세요.';\r\n                        if(check === 'cName') text = '이름을 입력해주세요.';\r\n                        if(check === 'cCell') text = '전화번호를 입력해주세요.';\r\n                        if(check === 'cJumin') text = '주민번호를 입력해주세요.';\r\n                        if(check === 'cPost') text = '주소를 입력해주세요.';\r\n                        if(check === 'cAddr1') text = '주소1을 입력해주세요.';\r\n                        if(check === 'cAddr2') text = '주소2를 입력해주세요.';\r\n                        if(check === 'cJobN') text = '직장명을 입력해주세요.';\r\n                        if(check === 'cCarCc') text = '배기량을 입력해주세요.';\r\n                        if(check === 'cUseN') text = '운전경력을 입력해주세요.';\r\n                        if(check === 'cJobLocal') text = '근무지역을 입력해주세요.';\r\n                        if(check === 'cMoney') text = '월소득을 입력해주세요.';\r\n                        if(check === 'cDrink') text = '음주여부를 입력해주세요.';\r\n                        if(check === 'cWeekD') text = '음주횟수를 입력해주세요.';\r\n                        if(check === 'cOneD') text = '주량을 입력해주세요.';\r\n                        if(check === 'cSmoke') text = '흡연여부를 입력해주세요.';\r\n                        if(check === 'cWeekS') text = '흡연량를 입력해주세요.';\r\n                        if(check === 'cOneS') text = '흡연기간을 입력해주세요.';\r\n                        if(check === 'cHeight') text = '주소를 입력해주세요.';\r\n                        if(check === 'cWeight') text = '몸무게를 입력해주세요.';\r\n                        if(check === 'cBank') text = '은행명을 입력해주세요.';\r\n                        if(check === 'cAccount') text = '계좌번호를 입력해주세요.';\r\n                        if(check === 'cPayDt') text = '납입 일자를 선택해주세요.';\r\n                        break;\r\n                    }*/\r\n                }\r\n                if(check === '') {\r\n                        sendJoin(props.info)\r\n                            .then((res: any) => {\r\n                                console.log(res)\r\n                                if (res.status === 200) {\r\n                                    setFlag(true);\r\n                                    alert(\"감사합니다!\\n이륜차 운전자 보험 가입 신청이 완료되었습니다. \\n 기입해주신 번호로 담당자가 곧 연락드릴 예정입니다\")\r\n                                } else {\r\n                                    alert(res.msg);\r\n                                }\r\n                            })\r\n                    }\r\n                }else {\r\n                    alert(text);\r\n                }\r\n            }else {\r\n                text = 'URL 주소를 확인해주세요.';\r\n                alert(text);\r\n            }\r\n\r\n         if(id === 'confirm'){\r\n            page('/');\r\n        }\r\n        }\r\n    useEffect(() => {\r\n\r\n    }, [props.info]);\r\n    return (\r\n        <div className='w-full pb-[170px]'>\r\n            <div className='border  mx-8 my-8 py-[10px] px-4 rounded-lg bg-[#0e47a1] text-white font-bold text-[14px] flex items-center justify-center'>\r\n                <button id={'reg'} className='w-full' onClick={onClickHandler}>신청하기</button>\r\n            </div>\r\n            {/*{   flag &&\r\n                    <Modal isOpen={flag} style={customStyles}>\r\n                        <div className='border-b bg-[#f6fbf7] border-b-[#157b4b] font-bold'>\r\n                            <div className='flex justify-center py-2'>\r\n                                가입 신청 완료\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex-col justify-center text-center text-[14px] font-semibold'>\r\n                            <div className='pt-4'>\r\n                                감사합니다!\r\n                            </div>\r\n                            <div>\r\n                                이륜차 운전자 보험 가입 신청이 완료되었습니다.\r\n                            </div>\r\n                            <div>\r\n                                기입해주신 번호로 담당자가 곧 연락드릴 예정입니다\r\n                            </div>\r\n                        </div>\r\n                        <div className='fixed bottom-0 w-full flex justify-center py-2'>\r\n                            <button id={'confirm'} className='button_on' onClick={onClickHandler}>확인</button>\r\n                        </div>\r\n                    </Modal>\r\n            }*/}\r\n            {/*{   errMsg &&\r\n                <Modal isOpen={errMsg} style={customStyles}>\r\n                    <div className='border-b bg-[#f6fbf7] border-b-[#157b4b] font-bold'>\r\n                        <div className='flex justify-center py-2'>\r\n                            잘못된 입력\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex justify-center mt-8'>\r\n                        <h2>\r\n                            {msg}\r\n                        </h2>\r\n                    </div>\r\n                    <div className='fixed bottom-0 w-full flex justify-center py-2'>\r\n                        <button id={'confirm'} className='button_on' onClick={(e : React.MouseEvent<HTMLElement>)=>setErrMsg(false)}>확인</button>\r\n                    </div>\r\n                </Modal>\r\n            }*/}\r\n        </div>\r\n    )\r\n}\r\nexport default RegisterButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}