{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uAE30\\uB355\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\confirmButton.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmButton = ({\n  code,\n  inputCode\n}) => {\n  _s();\n  const [isFlag, setFlag] = useState(false);\n  const onClickHandler = e => {\n    if (code !== '' && inputCode !== '') {\n      setFlag(false);\n    } else {\n      setFlag(true);\n    }\n    if (code === inputCode) {\n      alert('통과.');\n    }\n    if (code !== inputCode) {\n      alert('잘못된 인증번호 입니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button_off\",\n      onClick: onClickHandler,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ConfirmButton, \"l76t22DBy30PxifgWVQrD/2Sbv4=\");\n_c = ConfirmButton;\nexport default ConfirmButton;\nvar _c;\n$RefreshReg$(_c, \"ConfirmButton\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ConfirmButton","code","inputCode","_s","isFlag","setFlag","onClickHandler","e","alert","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/confirmButton.tsx"],"sourcesContent":["import {useState} from \"react\";\r\n\r\ninterface Props{\r\n    code : string,\r\n    inputCode : string\r\n}\r\nconst ConfirmButton = ({code, inputCode} : Props) => {\r\n    const [isFlag, setFlag] = useState<boolean>(false);\r\n    const onClickHandler = (e : React.MouseEvent<HTMLElement>) => {\r\n        if(code !== '' && inputCode !== ''){\r\n            setFlag(false);\r\n        }else {\r\n            setFlag(true);\r\n        }\r\n        if(code === inputCode){\r\n            alert('통과.');\r\n        }\r\n        if(code !== inputCode){\r\n            alert('잘못된 인증번호 입니다.');\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <button className='button_off' onClick={onClickHandler}>확인</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ConfirmButton;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/B,MAAMC,aAAa,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAU,KAAK,CAAC;EAClD,MAAMS,cAAc,GAAIC,CAAiC,IAAK;IAC1D,IAAGN,IAAI,KAAK,EAAE,IAAIC,SAAS,KAAK,EAAE,EAAC;MAC/BG,OAAO,CAAC,KAAK,CAAC;IAClB,CAAC,MAAK;MACFA,OAAO,CAAC,IAAI,CAAC;IACjB;IACA,IAAGJ,IAAI,KAAKC,SAAS,EAAC;MAClBM,KAAK,CAAC,KAAK,CAAC;IAChB;IACA,IAAGP,IAAI,KAAKC,SAAS,EAAC;MAClBM,KAAK,CAAC,eAAe,CAAC;IAC1B;EACJ,CAAC;EACD,oBACIT,OAAA;IAAAU,QAAA,eACIV,OAAA;MAAQW,SAAS,EAAC,YAAY;MAACC,OAAO,EAAEL,cAAe;MAAAG,QAAA,EAAC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd,CAAC;AAAAZ,EAAA,CApBKH,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAqBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}