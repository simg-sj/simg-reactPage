{"ast":null,"code":"import{produce}from'immer';const USER_PHONE='userinfo/USER_PHONE';export const GLOBAL_LOADING=\"LOADING\";export const GLOBAL_LOADED=\"LOADED\";export const userPhone=cell=>({type:USER_PHONE,cell});const initialState={cell:'',loading:false};function userInfo(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case USER_PHONE:return produce(state,draft=>{draft.cell=action.cell;});case GLOBAL_LOADING:return produce(state,draft=>{draft.loading=true;});case GLOBAL_LOADED:return produce(state,draft=>{draft.loading=false;});default:return state;}}export default userInfo;","map":{"version":3,"names":["produce","USER_PHONE","GLOBAL_LOADING","GLOBAL_LOADED","userPhone","cell","type","initialState","loading","userInfo","state","arguments","length","undefined","action","draft"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/pages/reducers/userInfo.tsx"],"sourcesContent":["import { produce } from 'immer';\r\n\r\nconst USER_PHONE = 'userinfo/USER_PHONE';\r\nexport const GLOBAL_LOADING = \"LOADING\";\r\nexport const GLOBAL_LOADED = \"LOADED\";\r\n\r\nexport const userPhone = (  cell: string ) => ({\r\n    type : USER_PHONE,\r\n    cell\r\n});\r\n\r\n\r\ntype PhoneType = {\r\n    cell : string\r\n    loading : boolean\r\n}\r\n\r\nconst initialState : PhoneType = {\r\n    cell : '',\r\n    loading : false\r\n};\r\n\r\nfunction userInfo(state = initialState, action: { type: any; cell : string, loading : boolean })  {\r\n    switch (action.type){\r\n        case  USER_PHONE :\r\n            return produce(state, draft => {\r\n                draft.cell = action.cell\r\n            });\r\n        case GLOBAL_LOADING :\r\n            return produce(state, draft => {\r\n                draft.loading = true\r\n            });\r\n        case GLOBAL_LOADED :\r\n            return produce(state, draft => {\r\n                draft.loading = false\r\n            });\r\n        default : return state;\r\n    }\r\n}\r\nexport default userInfo;"],"mappings":"AAAA,OAASA,OAAO,KAAQ,OAAO,CAE/B,KAAM,CAAAC,UAAU,CAAG,qBAAqB,CACxC,MAAO,MAAM,CAAAC,cAAc,CAAG,SAAS,CACvC,MAAO,MAAM,CAAAC,aAAa,CAAG,QAAQ,CAErC,MAAO,MAAM,CAAAC,SAAS,CAAMC,IAAY,GAAO,CAC3CC,IAAI,CAAGL,UAAU,CACjBI,IACJ,CAAC,CAAC,CAQF,KAAM,CAAAE,YAAwB,CAAG,CAC7BF,IAAI,CAAG,EAAE,CACTG,OAAO,CAAG,KACd,CAAC,CAED,QAAS,CAAAC,QAAQA,CAAA,CAAiF,IAAhF,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGJ,YAAY,IAAE,CAAAO,MAAuD,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC3F,OAAQC,MAAM,CAACR,IAAI,EACf,IAAM,CAAAL,UAAU,CACZ,MAAO,CAAAD,OAAO,CAACU,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACV,IAAI,CAAGS,MAAM,CAACT,IAAI,CAC5B,CAAC,CAAC,CACN,IAAK,CAAAH,cAAc,CACf,MAAO,CAAAF,OAAO,CAACU,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACP,OAAO,CAAG,IAAI,CACxB,CAAC,CAAC,CACN,IAAK,CAAAL,aAAa,CACd,MAAO,CAAAH,OAAO,CAACU,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACP,OAAO,CAAG,KAAK,CACzB,CAAC,CAAC,CACN,QAAU,MAAO,CAAAE,KAAK,CAC1B,CACJ,CACA,cAAe,CAAAD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}