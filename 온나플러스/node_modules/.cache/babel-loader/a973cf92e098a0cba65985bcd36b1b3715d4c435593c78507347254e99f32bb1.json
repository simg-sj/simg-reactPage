{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NameInput=props=>{const[name,setName]=useState('');const[check,setCheck]=useState(false);const onChangeHandler=e=>{const nameRegex=/^[ㄱ-ㅎ가-힣a-zA-Z]+$/;setName(e.currentTarget.value);if(nameRegex.test(name)){setCheck(true);}else{setCheck(false);}};useEffect(()=>{if(check){props.setInfo(prevState=>{return{...prevState,cName:name};});}},[name]);return/*#__PURE__*/_jsxs(\"div\",{className:\"pt-4 flex flex-col pb-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sub_title pb-1 pl-4\",children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:'text',onChange:onChangeHandler,className:\"input ml-2\",placeholder:\"\\uAE30\\uC0AC \\uC131\\uBA85\"}),!check&&name!==''&&/*#__PURE__*/_jsx(\"h2\",{className:\"text-red-500 text-[11px] pt-2 pl-2\",children:\"\\uC774\\uB984\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"})]});};export default NameInput;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","NameInput","props","name","setName","check","setCheck","onChangeHandler","e","nameRegex","currentTarget","value","test","setInfo","prevState","cName","className","children","type","onChange","placeholder"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/inputs/nameInput.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\ntype InfoProps = {\r\n    bpk : string,\r\n    cName : string,\r\n    cCell : string,\r\n    cJumin : string,\r\n    cMail : string,\r\n    cPost : string,\r\n    cAddr1 : string,\r\n    cAddr2 : string,\r\n    cJob : string,\r\n}\r\nconst NameInput = (props : {info : InfoProps, setInfo : React.Dispatch<React.SetStateAction<InfoProps>>}  ) => {\r\n    const [name , setName] = useState<string>('');\r\n    const [check, setCheck] = useState<boolean>(false);\r\n    const onChangeHandler = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        const nameRegex = /^[ㄱ-ㅎ가-힣a-zA-Z]+$/;\r\n        setName(e.currentTarget.value);\r\n        if(nameRegex.test(name)){\r\n            setCheck(true);\r\n        }else {\r\n            setCheck(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(check){\r\n            props.setInfo((prevState) => {\r\n                return { ...prevState, cName: name }\r\n            });\r\n        }\r\n    }, [name]);\r\n    return(\r\n        <div className='pt-4 flex flex-col pb-8'>\r\n            <div className='sub_title pb-1 pl-4'>\r\n                이름\r\n            </div>\r\n            <input type={'text'} onChange={onChangeHandler} className='input ml-2' placeholder='기사 성명'/>\r\n            {!check && name !== '' && <h2 className='text-red-500 text-[11px] pt-2 pl-2'>이름을 확인해주세요.</h2>}\r\n        </div>\r\n    )\r\n}\r\nexport default NameInput;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAajD,KAAM,CAAAC,SAAS,CAAIC,KAAqF,EAAO,CAC3G,KAAM,CAACC,IAAI,CAAGC,OAAO,CAAC,CAAGR,QAAQ,CAAS,EAAE,CAAC,CAC7C,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAU,KAAK,CAAC,CAClD,KAAM,CAAAW,eAAe,CAAIC,CAAuC,EAAK,CACjE,KAAM,CAAAC,SAAS,CAAG,mBAAmB,CACrCL,OAAO,CAACI,CAAC,CAACE,aAAa,CAACC,KAAK,CAAC,CAC9B,GAAGF,SAAS,CAACG,IAAI,CAACT,IAAI,CAAC,CAAC,CACpBG,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,IAAK,CACFA,QAAQ,CAAC,KAAK,CAAC,CACnB,CACJ,CAAC,CACDX,SAAS,CAAC,IAAM,CACZ,GAAGU,KAAK,CAAC,CACLH,KAAK,CAACW,OAAO,CAAEC,SAAS,EAAK,CACzB,MAAO,CAAE,GAAGA,SAAS,CAAEC,KAAK,CAAEZ,IAAK,CAAC,CACxC,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CACV,mBACIH,KAAA,QAAKgB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACpCnB,IAAA,QAAKkB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,cAErC,CAAK,CAAC,cACNnB,IAAA,UAAOoB,IAAI,CAAE,MAAO,CAACC,QAAQ,CAAEZ,eAAgB,CAACS,SAAS,CAAC,YAAY,CAACI,WAAW,CAAC,2BAAO,CAAC,CAAC,CAC3F,CAACf,KAAK,EAAIF,IAAI,GAAK,EAAE,eAAIL,IAAA,OAAIkB,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAAC,0DAAW,CAAI,CAAC,EAC5F,CAAC,CAEd,CAAC,CACD,cAAe,CAAAhB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}