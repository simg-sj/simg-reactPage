{"ast":null,"code":"import{produce}from'immer';const USER_PHONE='userinfo/USER_PHONE';export const GLOBAL_LOADING=\"LOADING\";export const GLOBAL_LOADED=\"LOADED\";const API_KEYS='userinfo/APK_KEYS';export const userPhone=cell=>({type:USER_PHONE,cell});export const apiKeys=keys=>({type:API_KEYS,keys});const initialState={cell:'',loading:false,keys:''};function userInfo(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case USER_PHONE:return produce(state,draft=>{draft.cell=action.cell;});case GLOBAL_LOADING:return produce(state,draft=>{draft.loading=true;});case GLOBAL_LOADED:return produce(state,draft=>{draft.loading=false;});case API_KEYS:return produce(state,draft=>{draft.keys=action.keys;draft.keys=action.keys;});default:return state;}}export default userInfo;","map":{"version":3,"names":["produce","USER_PHONE","GLOBAL_LOADING","GLOBAL_LOADED","API_KEYS","userPhone","cell","type","apiKeys","keys","initialState","loading","userInfo","state","arguments","length","undefined","action","draft"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/pages/reducers/userInfo.tsx"],"sourcesContent":["import { produce } from 'immer';\r\n\r\nconst USER_PHONE = 'userinfo/USER_PHONE';\r\nexport const GLOBAL_LOADING = \"LOADING\";\r\nexport const GLOBAL_LOADED = \"LOADED\";\r\n\r\nconst API_KEYS = 'userinfo/APK_KEYS';\r\n\r\nexport const userPhone = (  cell: string ) => ({\r\n    type : USER_PHONE,\r\n    cell\r\n});\r\n\r\nexport const apiKeys = ( keys : any ) => ({\r\n    type : API_KEYS,\r\n    keys\r\n})\r\n\r\ntype PhoneType = {\r\n    cell : string\r\n    loading : boolean\r\n    keys : string\r\n}\r\n\r\nconst initialState : PhoneType = {\r\n    cell : '',\r\n    loading : false,\r\n    keys : ''\r\n};\r\n\r\nfunction userInfo(state = initialState, action: { type: any; cell : string, loading : boolean, keys : any })  {\r\n    switch (action.type){\r\n        case  USER_PHONE :\r\n            return produce(state, draft => {\r\n                draft.cell = action.cell\r\n            });\r\n        case GLOBAL_LOADING :\r\n            return produce(state, draft => {\r\n                draft.loading = true\r\n            });\r\n        case GLOBAL_LOADED :\r\n            return produce(state, draft => {\r\n                draft.loading = false\r\n            });\r\n        case API_KEYS :\r\n            return produce(state, draft => {\r\n                draft.keys = action.keys\r\n                draft.keys = action.keys\r\n            });\r\n        default : return state;\r\n    }\r\n}\r\nexport default userInfo;"],"mappings":"AAAA,OAASA,OAAO,KAAQ,OAAO,CAE/B,KAAM,CAAAC,UAAU,CAAG,qBAAqB,CACxC,MAAO,MAAM,CAAAC,cAAc,CAAG,SAAS,CACvC,MAAO,MAAM,CAAAC,aAAa,CAAG,QAAQ,CAErC,KAAM,CAAAC,QAAQ,CAAG,mBAAmB,CAEpC,MAAO,MAAM,CAAAC,SAAS,CAAMC,IAAY,GAAO,CAC3CC,IAAI,CAAGN,UAAU,CACjBK,IACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAE,OAAO,CAAKC,IAAU,GAAO,CACtCF,IAAI,CAAGH,QAAQ,CACfK,IACJ,CAAC,CAAC,CAQF,KAAM,CAAAC,YAAwB,CAAG,CAC7BJ,IAAI,CAAG,EAAE,CACTK,OAAO,CAAG,KAAK,CACfF,IAAI,CAAG,EACX,CAAC,CAED,QAAS,CAAAG,QAAQA,CAAA,CAA6F,IAA5F,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGJ,YAAY,IAAE,CAAAO,MAAmE,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACvG,OAAQC,MAAM,CAACV,IAAI,EACf,IAAM,CAAAN,UAAU,CACZ,MAAO,CAAAD,OAAO,CAACa,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACZ,IAAI,CAAGW,MAAM,CAACX,IAAI,CAC5B,CAAC,CAAC,CACN,IAAK,CAAAJ,cAAc,CACf,MAAO,CAAAF,OAAO,CAACa,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACP,OAAO,CAAG,IAAI,CACxB,CAAC,CAAC,CACN,IAAK,CAAAR,aAAa,CACd,MAAO,CAAAH,OAAO,CAACa,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACP,OAAO,CAAG,KAAK,CACzB,CAAC,CAAC,CACN,IAAK,CAAAP,QAAQ,CACT,MAAO,CAAAJ,OAAO,CAACa,KAAK,CAAEK,KAAK,EAAI,CAC3BA,KAAK,CAACT,IAAI,CAAGQ,MAAM,CAACR,IAAI,CACxBS,KAAK,CAACT,IAAI,CAAGQ,MAAM,CAACR,IAAI,CAC5B,CAAC,CAAC,CACN,QAAU,MAAO,CAAAI,KAAK,CAC1B,CACJ,CACA,cAAe,CAAAD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}