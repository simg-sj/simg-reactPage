{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uAE30\\uB355\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\sendButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { sendMessage } from \"../../pages/api/sendMessage\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendButton = ({\n  cell,\n  setCode,\n  isCell\n}) => {\n  _s();\n  const [sendFlag, setSendFlag] = useState(false);\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(false);\n  const customStyles = {\n    overlay: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    content: {\n      left: \"50%\",\n      margin: \"auto\",\n      width: \"350px\",\n      height: \"200px\",\n      padding: \"0\",\n      overflow: \"hidden\",\n      transform: \"translate(-50%,0)\"\n    }\n  };\n  const onClickHandler = e => {\n    sendMessage(cell).then(res => {\n      setCode(res.code);\n      setCount(count + 1);\n      setShow(true);\n      setSendFlag(false);\n      setTimeout(() => {\n        setSendFlag(true);\n      }, 10000);\n    }).catch(error => {\n      alert(error.msg);\n    });\n  };\n  useEffect(() => {\n    if (isCell) {\n      setSendFlag(true);\n    } else {\n      setSendFlag(false);\n    }\n  }, [isCell]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: sendFlag ? 'button_on' : 'button_off',\n      onClick: onClickHandler,\n      disabled: !sendFlag,\n      children: count === 0 ? '인증번호 전송' : '인증번호 재전송'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), show && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: show,\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b bg-[#f6fbf7] border-b-[#157b4b] font-bold\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center py-2\",\n          children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBC1C\\uC1A1 \\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-8\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC778\\uC99D\\uBC88\\uD638\\uAC00 \\uC815\\uC0C1\\uC801\\uC73C\\uB85C \\uBC1C\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed bottom-0 w-full flex justify-center py-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: 'confirm',\n          className: \"button_on\",\n          onClick: setShow(false),\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(SendButton, \"FQjHmdYTc1dzMBCzMtOWpwD8r9Q=\");\n_c = SendButton;\nexport default SendButton;\nvar _c;\n$RefreshReg$(_c, \"SendButton\");","map":{"version":3,"names":["React","useEffect","useState","sendMessage","Modal","jsxDEV","_jsxDEV","SendButton","cell","setCode","isCell","_s","sendFlag","setSendFlag","count","setCount","show","setShow","customStyles","overlay","backgroundColor","content","left","margin","width","height","padding","overflow","transform","onClickHandler","e","then","res","code","setTimeout","catch","error","alert","msg","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","style","id","_c","$RefreshReg$"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/sendButton.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { sendMessage } from \"../../pages/api/sendMessage\";\r\nimport { randomCode } from \"../util/common\";\r\nimport Modal from \"react-modal\";\r\ntype sendParam = {\r\n    code : string,\r\n    cell : string\r\n}\r\ninterface CellProps {\r\n    cell : string,\r\n    setCode : React.Dispatch<React.SetStateAction<string>>,\r\n    isCell : boolean\r\n}\r\nconst SendButton = ({cell, setCode, isCell} : CellProps) => {\r\n    const [sendFlag, setSendFlag] = useState<boolean>(false);\r\n    const [count, setCount] = useState<number>(0);\r\n    const [show, setShow] = useState<boolean>(false);\r\n    const customStyles = {\r\n        overlay: {\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        },\r\n        content: {\r\n            left: \"50%\",\r\n            margin: \"auto\",\r\n            width: \"350px\",\r\n            height: \"200px\",\r\n            padding: \"0\",\r\n            overflow: \"hidden\",\r\n            transform : \"translate(-50%,0)\"\r\n        },\r\n    };\r\n    const onClickHandler = (e : React.MouseEvent<HTMLElement>) => {\r\n         sendMessage(cell)\r\n            .then((res : any) => {\r\n                setCode(res.code);\r\n                setCount(count+1);\r\n                setShow(true);\r\n                setSendFlag(false);\r\n                setTimeout(() => {\r\n                    setSendFlag(true);\r\n                }, 10000);\r\n            }).catch((error) => {\r\n                alert(error.msg);\r\n         })\r\n    }\r\n    useEffect(() => {\r\n        if(isCell){\r\n            setSendFlag(true);\r\n        }else {\r\n            setSendFlag(false);\r\n        }\r\n    }, [isCell]);\r\n    return (\r\n        <div>\r\n            <button className={sendFlag ? 'button_on' : 'button_off'} onClick={onClickHandler} disabled={!sendFlag}>{ count === 0 ? '인증번호 전송' : '인증번호 재전송'}</button>\r\n            {\r\n                  show &&\r\n                <Modal isOpen={show} style={customStyles}>\r\n                    <div className='border-b bg-[#f6fbf7] border-b-[#157b4b] font-bold'>\r\n                        <div className='flex justify-center py-2'>\r\n                            인증번호 발송 완료\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex justify-center mt-8'>\r\n                        <h2>\r\n                            인증번호가 정상적으로 발송되었습니다.\r\n                        </h2>\r\n                    </div>\r\n                    <div className='fixed bottom-0 w-full flex justify-center py-2'>\r\n                        <button id={'confirm'} className='button_on' onClick={setShow(false)}>확인</button>\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default SendButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}