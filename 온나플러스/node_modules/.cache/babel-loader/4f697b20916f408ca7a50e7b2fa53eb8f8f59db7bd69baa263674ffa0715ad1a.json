{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uAE30\\uB355\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\phoneInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhoneInput = ({\n  setCell,\n  setIsCell\n}) => {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [isCheck, setIsCheck] = useState(false);\n  const onChangeHandler = e => {\n    const phoneRegex = /^\\d{3}\\d{3,4}\\d{4}$/;\n    const {\n      value\n    } = e.target;\n    const onlyNumber = value.replace(/[^-0-9]/g, '');\n    setPhone(onlyNumber);\n    if (phoneRegex.test(onlyNumber)) {\n      setIsCheck(true);\n      setIsCell(true);\n      setCell(onlyNumber);\n    } else {\n      setIsCheck(false);\n      setIsCell(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      className: \"input\",\n      value: phone,\n      type: \"string\",\n      onChange: e => onChangeHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-gray-500/50 font-semibold text-[12px] pt-1\",\n      children: \"(-)\\uC5C6\\uC774 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), !isCheck && phone !== '' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-red-500 text-[12px]\",\n      children: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638 \\uD615\\uC2DD\\uC774 \\uB9DE\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PhoneInput, \"TZ1mL+rvxwiDgZhcDAZvvMwDrj8=\");\n_c = PhoneInput;\nexport default PhoneInput;\nvar _c;\n$RefreshReg$(_c, \"PhoneInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhoneInput","setCell","setIsCell","_s","phone","setPhone","isCheck","setIsCheck","onChangeHandler","e","phoneRegex","value","target","onlyNumber","replace","test","children","placeholder","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/phoneInput.tsx"],"sourcesContent":["import React, {Dispatch, SetStateAction, useState} from \"react\";\r\n\r\ninterface Props {\r\n    setCell: React.Dispatch<React.SetStateAction<string>>;\r\n    setIsCell : React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\nconst PhoneInput = ({setCell, setIsCell} : Props) => {\r\n    const [phone, setPhone] = useState<String>('');\r\n    const [isCheck, setIsCheck] = useState<boolean>(false);\r\n    const onChangeHandler = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        const phoneRegex =/^\\d{3}\\d{3,4}\\d{4}$/;\r\n        const { value } = e.target;\r\n        const onlyNumber = value.replace(/[^-0-9]/g, '');\r\n        setPhone(onlyNumber);\r\n        if(phoneRegex.test(onlyNumber)){\r\n            setIsCheck(true);\r\n            setIsCell(true);\r\n            setCell(onlyNumber);\r\n        }else {\r\n            setIsCheck(false);\r\n            setIsCell(false);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <input placeholder='휴대폰 번호를 입력해주세요' className='input'  value={phone} type='string' onChange={(e) => onChangeHandler(e)}/>\r\n            <h2 className='text-gray-500/50 font-semibold text-[12px] pt-1'>(-)없이 입력해주세요.</h2>\r\n            {!isCheck && phone !== '' && <h2 className='text-red-500 text-[12px]'>휴대폰 번호 형식이 맞지 않습니다.</h2>}\r\n        </div>\r\n    )\r\n}\r\nexport default PhoneInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAA6BC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhE,MAAMC,UAAU,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAMW,eAAe,GAAIC,CAAuC,IAAK;IACjE,MAAMC,UAAU,GAAE,qBAAqB;IACvC,MAAM;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC1B,MAAMC,UAAU,GAAGF,KAAK,CAACG,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAChDT,QAAQ,CAACQ,UAAU,CAAC;IACpB,IAAGH,UAAU,CAACK,IAAI,CAACF,UAAU,CAAC,EAAC;MAC3BN,UAAU,CAAC,IAAI,CAAC;MAChBL,SAAS,CAAC,IAAI,CAAC;MACfD,OAAO,CAACY,UAAU,CAAC;IACvB,CAAC,MAAK;MACFN,UAAU,CAAC,KAAK,CAAC;MACjBL,SAAS,CAAC,KAAK,CAAC;IACpB;EACJ,CAAC;EACD,oBACIH,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAOkB,WAAW,EAAC,4EAAgB;MAACC,SAAS,EAAC,OAAO;MAAEP,KAAK,EAAEP,KAAM;MAACe,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAGX,CAAC,IAAKD,eAAe,CAACC,CAAC;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzHzB,OAAA;MAAImB,SAAS,EAAC,iDAAiD;MAAAF,QAAA,EAAC;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjF,CAAClB,OAAO,IAAIF,KAAK,KAAK,EAAE,iBAAIL,OAAA;MAAImB,SAAS,EAAC,0BAA0B;MAAAF,QAAA,EAAC;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7F,CAAC;AAEd,CAAC;AAAArB,EAAA,CAxBKH,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}