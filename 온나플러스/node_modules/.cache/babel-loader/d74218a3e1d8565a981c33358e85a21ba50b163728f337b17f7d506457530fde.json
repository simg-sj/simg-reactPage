{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uAE30\\uB355\\\\IdeaProjects\\\\connect_onna\\\\src\\\\components\\\\atoms\\\\modal\\\\postCode.tsx\",\n  _s = $RefreshSig$();\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCode = () => {\n  _s();\n  const open = useDaumPostcodePopup(scriptUrl);\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = \"\";\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n    }\n\n    //주소값을 상태값으로..\n    setpSignForms(prev => ({\n      ...prev,\n      address: fullAddress\n    }));\n  };\n  const handleClick = e => {\n    open({\n      onComplete: handleComplete\n    });\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adress_find\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      color: \"l_blue\",\n      size: \"sm\",\n      text: \"\\uC8FC\\uC18C \\uCC3E\\uAE30\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCode, \"wdTqFaf4SE0v5bH+s4jJJmiPkAQ=\", false, function () {\n  return [useDaumPostcodePopup];\n});\n_c = PostCode;\nexport default PostCode;\nvar _c;\n$RefreshReg$(_c, \"PostCode\");","map":{"version":3,"names":["useDaumPostcodePopup","React","jsxDEV","_jsxDEV","PostCode","_s","open","scriptUrl","handleComplete","data","fullAddress","address","extraAddress","addressType","bname","buildingName","setpSignForms","prev","handleClick","e","onComplete","preventDefault","className","children","color","size","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/김기덕/IdeaProjects/connect_onna/src/components/atoms/modal/postCode.tsx"],"sourcesContent":["import {useDaumPostcodePopup} from 'react-daum-postcode';\r\nimport React, {useState} from \"react\";\r\ninterface Props {\r\n    scriptUrl?: string;\r\n}\r\nconst PostCode = () => {\r\n    const open = useDaumPostcodePopup(scriptUrl);\r\n\r\n    const handleComplete = (data: any) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = \"\";\r\n\r\n        if (data.addressType === \"R\") {\r\n            if (data.bname !== \"\") {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== \"\") {\r\n                extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n            }\r\n            fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n        }\r\n\r\n        //주소값을 상태값으로..\r\n        setpSignForms((prev: Form) => ({ ...prev, address: fullAddress }));\r\n    };\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        open({ onComplete: handleComplete });\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <div className=\"adress_find\">\r\n            <button color=\"l_blue\" size=\"sm\" text=\"주소 찾기\" onClick={handleClick} />\r\n        </div>\r\n    );\r\n}\r\nexport default PostCode;"],"mappings":";;AAAA,SAAQA,oBAAoB,QAAO,qBAAqB;AACxD,OAAOC,KAAK,MAAkB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAGN,oBAAoB,CAACO,SAAS,CAAC;EAE5C,MAAMC,cAAc,GAAIC,IAAS,IAAK;IAClC,IAAIC,WAAW,GAAGD,IAAI,CAACE,OAAO;IAC9B,IAAIC,YAAY,GAAG,EAAE;IAErB,IAAIH,IAAI,CAACI,WAAW,KAAK,GAAG,EAAE;MAC1B,IAAIJ,IAAI,CAACK,KAAK,KAAK,EAAE,EAAE;QACnBF,YAAY,IAAIH,IAAI,CAACK,KAAK;MAC9B;MACA,IAAIL,IAAI,CAACM,YAAY,KAAK,EAAE,EAAE;QAC1BH,YAAY,IAAIA,YAAY,KAAK,EAAE,GAAI,KAAIH,IAAI,CAACM,YAAa,EAAC,GAAGN,IAAI,CAACM,YAAY;MACtF;MACAL,WAAW,IAAIE,YAAY,KAAK,EAAE,GAAI,KAAIA,YAAa,GAAE,GAAG,EAAE;IAClE;;IAEA;IACAI,aAAa,CAAEC,IAAU,KAAM;MAAE,GAAGA,IAAI;MAAEN,OAAO,EAAED;IAAY,CAAC,CAAC,CAAC;EACtE,CAAC;EAED,MAAMQ,WAAW,GAAIC,CAAsC,IAAK;IAC5Db,IAAI,CAAC;MAAEc,UAAU,EAAEZ;IAAe,CAAC,CAAC;IACpCW,CAAC,CAACE,cAAc,CAAC,CAAC;EACtB,CAAC;EACD,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBpB,OAAA;MAAQqB,KAAK,EAAC,QAAQ;MAACC,IAAI,EAAC,IAAI;MAACC,IAAI,EAAC,2BAAO;MAACC,OAAO,EAAET;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEd,CAAC;AAAA1B,EAAA,CA9BKD,QAAQ;EAAA,QACGJ,oBAAoB;AAAA;AAAAgC,EAAA,GAD/B5B,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}