{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\kmpark\\\\src\\\\components\\\\admin.tsx\",\n  _s = $RefreshSig$();\nimport cn from 'classnames';\nimport { useMediaQuery } from \"react-responsive\";\nimport React, { useEffect, useState } from \"react\";\nimport Login from \"./login\";\nimport axiosInstance from \"../api/axiosInstans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admin() {\n  _s();\n  const isPc = useMediaQuery({\n    query: \"(min-width: 990px)\"\n  });\n  const [scrolled, setScrolled] = useState(false);\n  const [parkingName, setParkinName] = useState('');\n  const [data, setData] = useState([]);\n  const [login, setLogin] = useState(false);\n  function isScrollable() {\n    // 현재 문서의 높이\n    const documentHeight = document.documentElement.scrollHeight;\n    // 창의 높이\n    const windowHeight = window.innerHeight;\n\n    // 현재 문서의 높이가 창의 높이보다 크면 스크롤이 생겼음을 의미\n    return documentHeight > windowHeight;\n  }\n  const onClickSearch = e => {\n    const fetchData = async () => {\n      try {\n        let data = {\n          parkingName: parkingName,\n          sort: 'name'\n        };\n        const result = await axiosInstance.post('/parkingNameSerch', data);\n        setData(result.data);\n        if (result.length <= 0) {\n          alert(\"데이터가 없습니다.\");\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  };\n  useEffect(() => {\n    setScrolled(isScrollable);\n  }, [data]);\n  useEffect(() => {\n    if (sessionStorage.getItem('upk')) {\n      setLogin(true);\n    }\n  }, [login]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn('w-full pt-[120px]', {\n      'h-[400px]': !scrolled,\n      'pb-[140px]': scrolled\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_wrap flex_center\",\n      children: login ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"asf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        setLogin: setLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"tHV7kt0X/4uqSPaiwJ8UK6t1k/o=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["cn","useMediaQuery","React","useEffect","useState","Login","axiosInstance","jsxDEV","_jsxDEV","Admin","_s","isPc","query","scrolled","setScrolled","parkingName","setParkinName","data","setData","login","setLogin","isScrollable","documentHeight","document","documentElement","scrollHeight","windowHeight","window","innerHeight","onClickSearch","e","fetchData","sort","result","post","length","alert","error","console","sessionStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/kmpark/src/components/admin.tsx"],"sourcesContent":["import cn from 'classnames';\r\nimport {useMediaQuery} from \"react-responsive\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Login from \"./login\";\r\nimport GetLocation from \"./getLocation\";\r\nimport axiosInstance from \"../api/axiosInstans\";\r\nimport {Location} from \"../@types/common\";\r\n\r\nexport default function Admin(){\r\n    const isPc = useMediaQuery({ query: \"(min-width: 990px)\" });\r\n    const [scrolled, setScrolled] = useState(false);\r\n    const [parkingName, setParkinName] = useState('');\r\n    const [data, setData] = useState<Location[]>([]);\r\n    const [login, setLogin] = useState(false);\r\n    function isScrollable() {\r\n        // 현재 문서의 높이\r\n        const documentHeight = document.documentElement.scrollHeight;\r\n        // 창의 높이\r\n        const windowHeight = window.innerHeight;\r\n\r\n        // 현재 문서의 높이가 창의 높이보다 크면 스크롤이 생겼음을 의미\r\n        return documentHeight > windowHeight;\r\n    }\r\n\r\n    const onClickSearch = (e : React.MouseEvent) => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let data = {\r\n                    parkingName : parkingName,\r\n                    sort :'name'\r\n                }\r\n                const result: any = await axiosInstance.post('/parkingNameSerch',data);\r\n                setData(result.data);\r\n                if(result.length <= 0 ){\r\n                    alert(\"데이터가 없습니다.\")\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setScrolled(isScrollable);\r\n    }, [data]);\r\n    useEffect(() => {\r\n        if(sessionStorage.getItem('upk')){\r\n            setLogin(true);\r\n        }\r\n    }, [login]);\r\n    return(\r\n        <div className={cn('w-full pt-[120px]', {'h-[400px]': !scrolled, 'pb-[140px]' : scrolled})}>\r\n            <div className='div_wrap flex_center'>\r\n                {\r\n                    login ?\r\n                        <div>\r\n                            asf\r\n                        </div>\r\n                        :\r\n                        <Login setLogin={setLogin}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}