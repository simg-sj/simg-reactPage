{"ast":null,"code":"import dayjs from 'dayjs';\nexport function getCompany() {\n  const company = [{\n    code: '01',\n    name: '마이체크업'\n  }, {\n    code: '02',\n    name: '벨류맵'\n  }];\n  return company;\n}\nexport function getCode(type) {\n  const company = [{\n    type: '01',\n    code: '1',\n    name: '마이체크업'\n  }, {\n    type: '02',\n    code: '02',\n    name: '벨류맵'\n  }];\n  for (let idx of company) {\n    if (idx.type === type) return idx.code;\n  }\n  return '00';\n}\nexport function excelDownload(type, data) {\n  let today = dayjs().format('YYYY-MM-DD');\n  console.log(excelData(type, data));\n  /*const excelHandler = {\r\n      getExcelFileName: () => {\r\n          return \"유저 데이터.xlsx\";\r\n      },\r\n      getSheetName: ()  => {\r\n          return today + '_' + type;\r\n      },\r\n      getExcelData: () => {\r\n          return data;\r\n      },\r\n      getWorksheet: () => {\r\n          const ws = XLSX.utils.json_to_sheet(excelHandler.getExcelData());\r\n            // 특정 셀에 스타일 적용 예제\r\n          ws['A1'].s = {\r\n              font: { bold: true, color: { rgb: 'FF0000' } }, // 폰트 색상을 빨간색으로 지정\r\n              fill: { bgColor: { indexed: 64 }, fgColor: { rgb: 'FFFF00' } }, // 배경색을 노란색으로 지정\r\n              border: { top: { style: 'thin', color: { rgb: '000000' } }, bottom: { style: 'thin', color: { rgb: '000000' } } } // 테두리 스타일 지정\r\n          };\r\n          ws['!cols'] = [\r\n              {\r\n                  wpx: 60,\r\n              }\r\n          ];\r\n            return ws;\r\n      },\r\n  };\r\n    const datas = excelHandler.getWorksheet();\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, datas, excelHandler.getSheetName());\r\n  XLSX.writeFile(workbook, excelHandler.getExcelFileName());*/\n}\nfunction excelData(type, data) {\n  if (type === '벨류맵') {\n    return data.map(item => ({\n      고객키: item.cmpk,\n      이름: item.cName,\n      생년월일: item.cJumin,\n      연락처: item.cCell,\n      나이: item.age\n    }));\n  }\n}","map":{"version":3,"names":["dayjs","getCompany","company","code","name","getCode","type","idx","excelDownload","data","today","format","console","log","excelData","map","item","고객키","cmpk","이름","cName","생년월일","cJumin","연락처","cCell","나이","age"],"sources":["D:/IdeaProjects/admin/src/utils/common.ts"],"sourcesContent":["import {Person} from '../@types/common';\r\nimport * as XLSX from \"xlsx-js-style\";\r\nimport dayjs from 'dayjs';\r\nimport getDate from \"../utils/getDate\";\r\n\r\nexport function getCompany(){\r\n    const company = [\r\n        {\r\n            code : '01',\r\n            name : '마이체크업'\r\n        },\r\n        {\r\n            code : '02',\r\n            name : '벨류맵'\r\n        }\r\n    ];\r\n\r\n    return company;\r\n}\r\nexport function getCode(type : string){\r\n    const company = [\r\n        {\r\n            type : '01',\r\n            code : '1',\r\n            name : '마이체크업'\r\n        },\r\n        {\r\n            type : '02',\r\n            code : '02',\r\n            name : '벨류맵'\r\n        }\r\n    ];\r\n\r\n    for(let idx of company){\r\n        if(idx.type === type) return idx.code;\r\n    }\r\n    return '00';\r\n}\r\n\r\nexport function excelDownload(type: string, data : Person[]){\r\n    let today = dayjs().format('YYYY-MM-DD');\r\n    console.log(excelData(type, data));\r\n    /*const excelHandler = {\r\n        getExcelFileName: () => {\r\n            return \"유저 데이터.xlsx\";\r\n        },\r\n        getSheetName: ()  => {\r\n            return today + '_' + type;\r\n        },\r\n        getExcelData: () => {\r\n            return data;\r\n        },\r\n        getWorksheet: () => {\r\n            const ws = XLSX.utils.json_to_sheet(excelHandler.getExcelData());\r\n\r\n            // 특정 셀에 스타일 적용 예제\r\n            ws['A1'].s = {\r\n                font: { bold: true, color: { rgb: 'FF0000' } }, // 폰트 색상을 빨간색으로 지정\r\n                fill: { bgColor: { indexed: 64 }, fgColor: { rgb: 'FFFF00' } }, // 배경색을 노란색으로 지정\r\n                border: { top: { style: 'thin', color: { rgb: '000000' } }, bottom: { style: 'thin', color: { rgb: '000000' } } } // 테두리 스타일 지정\r\n            };\r\n            ws['!cols'] = [\r\n                {\r\n                    wpx: 60,\r\n                }\r\n            ];\r\n\r\n            return ws;\r\n        },\r\n    };\r\n\r\n    const datas = excelHandler.getWorksheet();\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, datas, excelHandler.getSheetName());\r\n    XLSX.writeFile(workbook, excelHandler.getExcelFileName());*/\r\n}\r\n\r\n\r\nfunction excelData(type : string, data : any[]){\r\n    if(type === '벨류맵'){\r\n        return data.map((item) => ({\r\n            고객키: item.cmpk,\r\n            이름: item.cName,\r\n            생년월일: item.cJumin,\r\n            연락처: item.cCell,\r\n            나이: item.age\r\n        }));\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,SAASC,UAAUA,CAAA,EAAE;EACxB,MAAMC,OAAO,GAAG,CACZ;IACIC,IAAI,EAAG,IAAI;IACXC,IAAI,EAAG;EACX,CAAC,EACD;IACID,IAAI,EAAG,IAAI;IACXC,IAAI,EAAG;EACX,CAAC,CACJ;EAED,OAAOF,OAAO;AAClB;AACA,OAAO,SAASG,OAAOA,CAACC,IAAa,EAAC;EAClC,MAAMJ,OAAO,GAAG,CACZ;IACII,IAAI,EAAG,IAAI;IACXH,IAAI,EAAG,GAAG;IACVC,IAAI,EAAG;EACX,CAAC,EACD;IACIE,IAAI,EAAG,IAAI;IACXH,IAAI,EAAG,IAAI;IACXC,IAAI,EAAG;EACX,CAAC,CACJ;EAED,KAAI,IAAIG,GAAG,IAAIL,OAAO,EAAC;IACnB,IAAGK,GAAG,CAACD,IAAI,KAAKA,IAAI,EAAE,OAAOC,GAAG,CAACJ,IAAI;EACzC;EACA,OAAO,IAAI;AACf;AAEA,OAAO,SAASK,aAAaA,CAACF,IAAY,EAAEG,IAAe,EAAC;EACxD,IAAIC,KAAK,GAAGV,KAAK,CAAC,CAAC,CAACW,MAAM,CAAC,YAAY,CAAC;EACxCC,OAAO,CAACC,GAAG,CAACC,SAAS,CAACR,IAAI,EAAEG,IAAI,CAAC,CAAC;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA,SAASK,SAASA,CAACR,IAAa,EAAEG,IAAY,EAAC;EAC3C,IAAGH,IAAI,KAAK,KAAK,EAAC;IACd,OAAOG,IAAI,CAACM,GAAG,CAAEC,IAAI,KAAM;MACvBC,GAAG,EAAED,IAAI,CAACE,IAAI;MACdC,EAAE,EAAEH,IAAI,CAACI,KAAK;MACdC,IAAI,EAAEL,IAAI,CAACM,MAAM;MACjBC,GAAG,EAAEP,IAAI,CAACQ,KAAK;MACfC,EAAE,EAAET,IAAI,CAACU;IACb,CAAC,CAAC,CAAC;EACP;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}