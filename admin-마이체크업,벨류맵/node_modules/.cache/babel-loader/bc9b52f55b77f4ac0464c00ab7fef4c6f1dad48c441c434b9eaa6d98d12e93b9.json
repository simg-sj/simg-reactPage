{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\admin\\\\src\\\\components\\\\customSlider.tsx\";\nimport React from \"react\";\nimport Left from '../assets/images/left.svg';\nimport Right from '../assets/images/right.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SampleNextArrow(props) {\n  const {\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"customNext\",\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Right,\n      alt: 'left',\n      width: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = SampleNextArrow;\nfunction SamplePrevArrow(props) {\n  const {\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"customPrev\",\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Left,\n      alt: 'left',\n      width: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c2 = SamplePrevArrow;\nfunction CustomSlider({\n  data\n}) {\n  const settings = {\n    dots: true,\n    infinite: true,\n    vertical: true,\n    verticalSwiping: true,\n    slidesToShow: Math.min(data.length, 4),\n    // 데이터 배열의 길이와 4 중 작은 값을 사용\n    slidesToScroll: Math.min(data.length, 4),\n    // 데이터 배열의 길이와 4 중 작은 값을 사용\n    nextArrow: /*#__PURE__*/_jsxDEV(SampleNextArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this),\n    prevArrow: /*#__PURE__*/_jsxDEV(SamplePrevArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c3 = CustomSlider;\nexport default CustomSlider;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SampleNextArrow\");\n$RefreshReg$(_c2, \"SamplePrevArrow\");\n$RefreshReg$(_c3, \"CustomSlider\");","map":{"version":3,"names":["React","Left","Right","jsxDEV","_jsxDEV","SampleNextArrow","props","onClick","className","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","SamplePrevArrow","_c2","CustomSlider","data","settings","dots","infinite","vertical","verticalSwiping","slidesToShow","Math","min","length","slidesToScroll","nextArrow","prevArrow","_c3","$RefreshReg$"],"sources":["D:/IdeaProjects/admin/src/components/customSlider.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport Left from '../assets/images/left.svg';\r\nimport Right from '../assets/images/right.svg';\r\nimport {Person} from '../@types/common';\r\n\r\nfunction SampleNextArrow(props : any) {\r\n    const {  onClick } = props;\r\n    return (\r\n        <button\r\n            className='customNext'\r\n            onClick={onClick}\r\n        >\r\n            <img src={Right} alt={'left'} width={20}/>\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction SamplePrevArrow(props : any) {\r\n    const { onClick } = props;\r\n    return (\r\n        <button\r\n            className='customPrev'\r\n            onClick={onClick}\r\n        >\r\n            <img src={Left} alt={'left'} width={20}/>\r\n        </button>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    data : Person[]\r\n}\r\nfunction CustomSlider({data} : Props) {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        vertical: true,\r\n        verticalSwiping: true,\r\n        slidesToShow: Math.min(data.length, 4), // 데이터 배열의 길이와 4 중 작은 값을 사용\r\n        slidesToScroll: Math.min(data.length, 4), // 데이터 배열의 길이와 4 중 작은 값을 사용\r\n        nextArrow: <SampleNextArrow />,\r\n        prevArrow: <SamplePrevArrow />\r\n    };\r\n    return (\r\n        <div className=\"h-full w-full\">\r\n                {/*{\r\n                    data.length > 0 ?\r\n                        <Slider {...settings}>\r\n                            {\r\n                                data.map((person, index) =>\r\n                                    <div className='w-[200px] h-[100px] bg-white border rounded-xl mb-8 shadow px-4 flex flex-col' key={index}>\r\n                                        <table className=\"table-auto w-full\">\r\n                                            <thead className='h-[45px] font-[500]'>\r\n                                            <tr className='border-b pb-2'>\r\n                                                <th>\r\n                                                    No.\r\n                                                </th>\r\n                                                <th>\r\n                                                    고객키\r\n                                                </th>\r\n                                                <th>\r\n                                                    신청자\r\n                                                </th>\r\n                                                <th>\r\n                                                    핸드폰\r\n                                                </th>\r\n                                                <th>\r\n                                                    생년월일\r\n                                                </th>\r\n                                                <th>\r\n                                                    나이(성별)\r\n                                                </th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody className='base_font'>\r\n                                            <tr>\r\n                                                <td className='text-center pt-4'>\r\n                                                    {index + 1}\r\n                                                </td>\r\n                                                <td className='text-center pt-4'>\r\n                                                    {person.cmpk}\r\n                                                </td>\r\n                                                <td className='text-center pt-4'>\r\n                                                    {person.cName}\r\n                                                </td>\r\n                                                <td className='text-center pt-4'>\r\n                                                    {person.cCell}\r\n                                                </td>\r\n                                                <td className='text-center pt-4'>\r\n                                                    {person.cJumin}\r\n                                                </td>\r\n                                                <td className='text-center pt-4'>\r\n                                                    {person.age}\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </Slider>\r\n\r\n                        :\r\n                        <div className='w-full flex_center'>\r\n                            <div className='w-[400px] h-[100px] bg-white border rounded-xl mb-8 shadow px-4 flex_center'>\r\n                                <p>신청건이 없습니다.</p>\r\n                            </div>\r\n                        </div>\r\n                }*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomSlider;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,KAAK,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,eAAeA,CAACC,KAAW,EAAE;EAClC,MAAM;IAAGC;EAAQ,CAAC,GAAGD,KAAK;EAC1B,oBACIF,OAAA;IACII,SAAS,EAAC,YAAY;IACtBD,OAAO,EAAEA,OAAQ;IAAAE,QAAA,eAEjBL,OAAA;MAAKM,GAAG,EAAER,KAAM;MAACS,GAAG,EAAE,MAAO;MAACC,KAAK,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEjB;AAACC,EAAA,GAVQZ,eAAe;AAYxB,SAASa,eAAeA,CAACZ,KAAW,EAAE;EAClC,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzB,oBACIF,OAAA;IACII,SAAS,EAAC,YAAY;IACtBD,OAAO,EAAEA,OAAQ;IAAAE,QAAA,eAEjBL,OAAA;MAAKM,GAAG,EAAET,IAAK;MAACU,GAAG,EAAE,MAAO;MAACC,KAAK,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEjB;AAACG,GAAA,GAVQD,eAAe;AAexB,SAASE,YAAYA,CAAC;EAACC;AAAY,CAAC,EAAE;EAClC,MAAMC,QAAQ,GAAG;IACbC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,IAAI;IACdC,eAAe,EAAE,IAAI;IACrBC,YAAY,EAAEC,IAAI,CAACC,GAAG,CAACR,IAAI,CAACS,MAAM,EAAE,CAAC,CAAC;IAAE;IACxCC,cAAc,EAAEH,IAAI,CAACC,GAAG,CAACR,IAAI,CAACS,MAAM,EAAE,CAAC,CAAC;IAAE;IAC1CE,SAAS,eAAE5B,OAAA,CAACC,eAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC9BiB,SAAS,eAAE7B,OAAA,CAACc,eAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACjC,CAAC;EACD,oBACIZ,OAAA;IAAKI,SAAS,EAAC;EAAe;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiEzB,CAAC;AAEd;AAACkB,GAAA,GA/EQd,YAAY;AAiFrB,eAAeA,YAAY;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}