{"ast":null,"code":"import*as XLSX from\"xlsx-js-style\";import dayjs from'dayjs';export function getCompany(){const company=[{code:'01',name:'마이체크업',url:'mycheckup'},{code:'02',name:'벨류맵',url:'valuemap'}];return company;}export function getCode(type){const company=[{type:'01',code:'1',name:'마이체크업'},{type:'02',code:'2',name:'벨류맵'}];for(let idx of company){if(idx.type===type)return idx.code;}return'00';}export function getName(type){const company=[{type:'01',code:'1',name:'마이체크업'},{type:'02',code:'2',name:'벨류맵'}];for(let idx of company){if(idx.type===type)return idx.name;}return'00';}export function excelDownload(type,data){let today=dayjs().format('YYYY-MM-DD');let excel=excelData(type,data);// 타입 지정\nif(data.length<=0){console.error('데이터가 없습니다.');alert(\"데이터가 없습니다.\");return;}if(!excel){console.error('유효한 타입이 아닙니다.');return;}const excelHandler={getExcelFileName:()=>{return\"유저 데이터.xlsx\";},getSheetName:()=>{return today+'_'+type;},getExcelData:()=>{return excel;},getWorksheet:()=>{const ws=XLSX.utils.json_to_sheet(excelHandler.getExcelData()||[]);// undefined를 빈 배열로 처리\n// @ts-ignore\nconst range=XLSX.utils.decode_range(ws['!ref']);// 각 행에 스타일을 적용합니다.\nfor(let rowNum=range.s.r;rowNum<=range.e.r;rowNum++){const row=XLSX.utils.encode_row(rowNum);for(let colNum=range.s.c;colNum<=range.e.c;colNum++){const cell=XLSX.utils.encode_col(colNum);const cellRef=\"\".concat(cell).concat(row);// 특정 셀에 스타일을 설정합니다.\nif(rowNum===0){ws[cellRef].s={alignment:{horizontal:'center'},font:{bold:true,color:{rgb:'FFFFFF'}},fill:{bgColor:{indexed:64},fgColor:{rgb:'006ED0'}}};}else{// 특정 열에는 배경색을 지정하지 않습니다.\nws[cellRef].s={alignment:{horizontal:'center'}// 필요한 다른 스타일 속성도 추가할 수 있습니다.\n};}}}ws['!cols']=[{wpx:120},{wpx:80},{wpx:120},{wpx:120},{wpx:80}];return ws;}};const datas=excelHandler.getWorksheet();const workbook=XLSX.utils.book_new();XLSX.utils.book_append_sheet(workbook,datas,excelHandler.getSheetName());XLSX.writeFile(workbook,excelHandler.getExcelFileName());}function excelData(type,data){if(type==='벨류맵'){return data.map(item=>({고객키:item.cmpk,이름:item.cName,생년월일:item.cJumin,연락처:item.cCell,나이:item.age}));}if(type==='마이체크업'){return data.map(item=>({고객키:item.cmpk,이름:item.cName,생년월일:item.cJumin,연락처:item.cCell,나이:item.age}));}return undefined;}","map":{"version":3,"names":["XLSX","dayjs","getCompany","company","code","name","url","getCode","type","idx","getName","excelDownload","data","today","format","excel","excelData","length","console","error","alert","excelHandler","getExcelFileName","getSheetName","getExcelData","getWorksheet","ws","utils","json_to_sheet","range","decode_range","rowNum","s","r","e","row","encode_row","colNum","c","cell","encode_col","cellRef","concat","alignment","horizontal","font","bold","color","rgb","fill","bgColor","indexed","fgColor","wpx","datas","workbook","book_new","book_append_sheet","writeFile","map","item","고객키","cmpk","이름","cName","생년월일","cJumin","연락처","cCell","나이","age","undefined"],"sources":["D:/IdeaProjects/admin/src/utils/common.ts"],"sourcesContent":["import {Person} from '../@types/common';\r\nimport * as XLSX from \"xlsx-js-style\";\r\nimport dayjs from 'dayjs';\r\n\r\nexport function getCompany(){\r\n    const company = [\r\n        {\r\n            code : '01',\r\n            name : '마이체크업',\r\n            url : 'mycheckup'\r\n        },\r\n        {\r\n            code : '02',\r\n            name : '벨류맵',\r\n            url : 'valuemap'\r\n        }\r\n    ];\r\n\r\n    return company;\r\n}\r\nexport function getCode(type : string){\r\n    const company = [\r\n        {\r\n            type : '01',\r\n            code : '1',\r\n            name : '마이체크업'\r\n        },\r\n        {\r\n            type : '02',\r\n            code : '2',\r\n            name : '벨류맵'\r\n        }\r\n    ];\r\n\r\n    for(let idx of company){\r\n        if(idx.type === type) return idx.code;\r\n    }\r\n    return '00';\r\n}\r\n\r\n\r\nexport function getName(type : string){\r\n    const company = [\r\n        {\r\n            type : '01',\r\n            code : '1',\r\n            name : '마이체크업'\r\n        },\r\n        {\r\n            type : '02',\r\n            code : '2',\r\n            name : '벨류맵'\r\n        }\r\n    ];\r\n\r\n    for(let idx of company){\r\n        if(idx.type === type) return idx.name;\r\n    }\r\n    return '00';\r\n}\r\nexport function excelDownload(type: string, data: Person[]): void {\r\n    let today = dayjs().format('YYYY-MM-DD');\r\n    let excel: Excel[] | undefined = excelData(type, data); // 타입 지정\r\n    if (data.length <= 0) {\r\n        console.error('데이터가 없습니다.');\r\n        alert(\"데이터가 없습니다.\")\r\n        return;\r\n    }\r\n    if (!excel) {\r\n        console.error('유효한 타입이 아닙니다.');\r\n        return;\r\n    }\r\n\r\n    const excelHandler = {\r\n        getExcelFileName: () => {\r\n            return \"유저 데이터.xlsx\";\r\n        },\r\n        getSheetName: () => {\r\n            return today + '_' + type;\r\n        },\r\n        getExcelData: () => {\r\n            return excel;\r\n        },\r\n        getWorksheet: () => {\r\n            const ws = XLSX.utils.json_to_sheet(excelHandler.getExcelData() || []); // undefined를 빈 배열로 처리\r\n\r\n            // @ts-ignore\r\n            const range = XLSX.utils.decode_range(ws['!ref']);\r\n\r\n            // 각 행에 스타일을 적용합니다.\r\n            for (let rowNum = range.s.r; rowNum <= range.e.r; rowNum++) {\r\n                const row = XLSX.utils.encode_row(rowNum);\r\n                for (let colNum = range.s.c; colNum <= range.e.c; colNum++) {\r\n                    const cell = XLSX.utils.encode_col(colNum);\r\n                    const cellRef = `${cell}${row}`;\r\n                    // 특정 셀에 스타일을 설정합니다.\r\n                    if (rowNum === 0) {\r\n                        ws[cellRef].s = {\r\n                            alignment: { horizontal: 'center' },\r\n                            font: { bold: true, color: { rgb: 'FFFFFF' } },\r\n                            fill: { bgColor: { indexed: 64 }, fgColor: { rgb: '006ED0' } },\r\n                        };\r\n                    } else {\r\n                        // 특정 열에는 배경색을 지정하지 않습니다.\r\n                        ws[cellRef].s = {\r\n                            alignment: { horizontal: 'center' },\r\n                            // 필요한 다른 스타일 속성도 추가할 수 있습니다.\r\n                        };\r\n                        }\r\n                }\r\n            }\r\n            ws['!cols'] = [\r\n                {\r\n                    wpx: 120,\r\n                },\r\n                {\r\n                    wpx: 80,\r\n                },\r\n                {\r\n                    wpx: 120,\r\n                },\r\n                {\r\n                    wpx: 120,\r\n                },\r\n                {\r\n                    wpx: 80,\r\n                },\r\n            ];\r\n            return ws;\r\n        },\r\n    };\r\n\r\n    const datas = excelHandler.getWorksheet();\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, datas, excelHandler.getSheetName());\r\n    XLSX.writeFile(workbook, excelHandler.getExcelFileName());\r\n}\r\n\r\n\r\ninterface Excel {\r\n    고객키 : string,\r\n    이름: string,\r\n    생년월일: string,\r\n    연락처: string,\r\n    나이: string\r\n}\r\n\r\nfunction excelData(type: string, data: any[]): Excel[] | undefined {\r\n    if (type === '벨류맵') {\r\n        return data.map((item) => ({\r\n            고객키: item.cmpk,\r\n            이름: item.cName,\r\n            생년월일: item.cJumin,\r\n            연락처: item.cCell,\r\n            나이: item.age\r\n        }));\r\n    }\r\n    if (type === '마이체크업') {\r\n        return data.map((item) => ({\r\n            고객키: item.cmpk,\r\n            이름: item.cName,\r\n            생년월일: item.cJumin,\r\n            연락처: item.cCell,\r\n            나이: item.age\r\n        }));\r\n    }\r\n    return undefined;\r\n}\r\n\r\n\r\n"],"mappings":"AACA,MAAO,GAAK,CAAAA,IAAI,KAAM,eAAe,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,SAAS,CAAAC,UAAUA,CAAA,CAAE,CACxB,KAAM,CAAAC,OAAO,CAAG,CACZ,CACIC,IAAI,CAAG,IAAI,CACXC,IAAI,CAAG,OAAO,CACdC,GAAG,CAAG,WACV,CAAC,CACD,CACIF,IAAI,CAAG,IAAI,CACXC,IAAI,CAAG,KAAK,CACZC,GAAG,CAAG,UACV,CAAC,CACJ,CAED,MAAO,CAAAH,OAAO,CAClB,CACA,MAAO,SAAS,CAAAI,OAAOA,CAACC,IAAa,CAAC,CAClC,KAAM,CAAAL,OAAO,CAAG,CACZ,CACIK,IAAI,CAAG,IAAI,CACXJ,IAAI,CAAG,GAAG,CACVC,IAAI,CAAG,OACX,CAAC,CACD,CACIG,IAAI,CAAG,IAAI,CACXJ,IAAI,CAAG,GAAG,CACVC,IAAI,CAAG,KACX,CAAC,CACJ,CAED,IAAI,GAAI,CAAAI,GAAG,GAAI,CAAAN,OAAO,CAAC,CACnB,GAAGM,GAAG,CAACD,IAAI,GAAKA,IAAI,CAAE,MAAO,CAAAC,GAAG,CAACL,IAAI,CACzC,CACA,MAAO,IAAI,CACf,CAGA,MAAO,SAAS,CAAAM,OAAOA,CAACF,IAAa,CAAC,CAClC,KAAM,CAAAL,OAAO,CAAG,CACZ,CACIK,IAAI,CAAG,IAAI,CACXJ,IAAI,CAAG,GAAG,CACVC,IAAI,CAAG,OACX,CAAC,CACD,CACIG,IAAI,CAAG,IAAI,CACXJ,IAAI,CAAG,GAAG,CACVC,IAAI,CAAG,KACX,CAAC,CACJ,CAED,IAAI,GAAI,CAAAI,GAAG,GAAI,CAAAN,OAAO,CAAC,CACnB,GAAGM,GAAG,CAACD,IAAI,GAAKA,IAAI,CAAE,MAAO,CAAAC,GAAG,CAACJ,IAAI,CACzC,CACA,MAAO,IAAI,CACf,CACA,MAAO,SAAS,CAAAM,aAAaA,CAACH,IAAY,CAAEI,IAAc,CAAQ,CAC9D,GAAI,CAAAC,KAAK,CAAGZ,KAAK,CAAC,CAAC,CAACa,MAAM,CAAC,YAAY,CAAC,CACxC,GAAI,CAAAC,KAA0B,CAAGC,SAAS,CAACR,IAAI,CAAEI,IAAI,CAAC,CAAE;AACxD,GAAIA,IAAI,CAACK,MAAM,EAAI,CAAC,CAAE,CAClBC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC,CAC3BC,KAAK,CAAC,YAAY,CAAC,CACnB,OACJ,CACA,GAAI,CAACL,KAAK,CAAE,CACRG,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC,CAC9B,OACJ,CAEA,KAAM,CAAAE,YAAY,CAAG,CACjBC,gBAAgB,CAAEA,CAAA,GAAM,CACpB,MAAO,aAAa,CACxB,CAAC,CACDC,YAAY,CAAEA,CAAA,GAAM,CAChB,MAAO,CAAAV,KAAK,CAAG,GAAG,CAAGL,IAAI,CAC7B,CAAC,CACDgB,YAAY,CAAEA,CAAA,GAAM,CAChB,MAAO,CAAAT,KAAK,CAChB,CAAC,CACDU,YAAY,CAAEA,CAAA,GAAM,CAChB,KAAM,CAAAC,EAAE,CAAG1B,IAAI,CAAC2B,KAAK,CAACC,aAAa,CAACP,YAAY,CAACG,YAAY,CAAC,CAAC,EAAI,EAAE,CAAC,CAAE;AAExE;AACA,KAAM,CAAAK,KAAK,CAAG7B,IAAI,CAAC2B,KAAK,CAACG,YAAY,CAACJ,EAAE,CAAC,MAAM,CAAC,CAAC,CAEjD;AACA,IAAK,GAAI,CAAAK,MAAM,CAAGF,KAAK,CAACG,CAAC,CAACC,CAAC,CAAEF,MAAM,EAAIF,KAAK,CAACK,CAAC,CAACD,CAAC,CAAEF,MAAM,EAAE,CAAE,CACxD,KAAM,CAAAI,GAAG,CAAGnC,IAAI,CAAC2B,KAAK,CAACS,UAAU,CAACL,MAAM,CAAC,CACzC,IAAK,GAAI,CAAAM,MAAM,CAAGR,KAAK,CAACG,CAAC,CAACM,CAAC,CAAED,MAAM,EAAIR,KAAK,CAACK,CAAC,CAACI,CAAC,CAAED,MAAM,EAAE,CAAE,CACxD,KAAM,CAAAE,IAAI,CAAGvC,IAAI,CAAC2B,KAAK,CAACa,UAAU,CAACH,MAAM,CAAC,CAC1C,KAAM,CAAAI,OAAO,IAAAC,MAAA,CAAMH,IAAI,EAAAG,MAAA,CAAGP,GAAG,CAAE,CAC/B;AACA,GAAIJ,MAAM,GAAK,CAAC,CAAE,CACdL,EAAE,CAACe,OAAO,CAAC,CAACT,CAAC,CAAG,CACZW,SAAS,CAAE,CAAEC,UAAU,CAAE,QAAS,CAAC,CACnCC,IAAI,CAAE,CAAEC,IAAI,CAAE,IAAI,CAAEC,KAAK,CAAE,CAAEC,GAAG,CAAE,QAAS,CAAE,CAAC,CAC9CC,IAAI,CAAE,CAAEC,OAAO,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAEC,OAAO,CAAE,CAAEJ,GAAG,CAAE,QAAS,CAAE,CACjE,CAAC,CACL,CAAC,IAAM,CACH;AACAtB,EAAE,CAACe,OAAO,CAAC,CAACT,CAAC,CAAG,CACZW,SAAS,CAAE,CAAEC,UAAU,CAAE,QAAS,CAClC;AACJ,CAAC,CACD,CACR,CACJ,CACAlB,EAAE,CAAC,OAAO,CAAC,CAAG,CACV,CACI2B,GAAG,CAAE,GACT,CAAC,CACD,CACIA,GAAG,CAAE,EACT,CAAC,CACD,CACIA,GAAG,CAAE,GACT,CAAC,CACD,CACIA,GAAG,CAAE,GACT,CAAC,CACD,CACIA,GAAG,CAAE,EACT,CAAC,CACJ,CACD,MAAO,CAAA3B,EAAE,CACb,CACJ,CAAC,CAED,KAAM,CAAA4B,KAAK,CAAGjC,YAAY,CAACI,YAAY,CAAC,CAAC,CACzC,KAAM,CAAA8B,QAAQ,CAAGvD,IAAI,CAAC2B,KAAK,CAAC6B,QAAQ,CAAC,CAAC,CACtCxD,IAAI,CAAC2B,KAAK,CAAC8B,iBAAiB,CAACF,QAAQ,CAAED,KAAK,CAAEjC,YAAY,CAACE,YAAY,CAAC,CAAC,CAAC,CAC1EvB,IAAI,CAAC0D,SAAS,CAACH,QAAQ,CAAElC,YAAY,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAC7D,CAWA,QAAS,CAAAN,SAASA,CAACR,IAAY,CAAEI,IAAW,CAAuB,CAC/D,GAAIJ,IAAI,GAAK,KAAK,CAAE,CAChB,MAAO,CAAAI,IAAI,CAAC+C,GAAG,CAAEC,IAAI,GAAM,CACvBC,GAAG,CAAED,IAAI,CAACE,IAAI,CACdC,EAAE,CAAEH,IAAI,CAACI,KAAK,CACdC,IAAI,CAAEL,IAAI,CAACM,MAAM,CACjBC,GAAG,CAAEP,IAAI,CAACQ,KAAK,CACfC,EAAE,CAAET,IAAI,CAACU,GACb,CAAC,CAAC,CAAC,CACP,CACA,GAAI9D,IAAI,GAAK,OAAO,CAAE,CAClB,MAAO,CAAAI,IAAI,CAAC+C,GAAG,CAAEC,IAAI,GAAM,CACvBC,GAAG,CAAED,IAAI,CAACE,IAAI,CACdC,EAAE,CAAEH,IAAI,CAACI,KAAK,CACdC,IAAI,CAAEL,IAAI,CAACM,MAAM,CACjBC,GAAG,CAAEP,IAAI,CAACQ,KAAK,CACfC,EAAE,CAAET,IAAI,CAACU,GACb,CAAC,CAAC,CAAC,CACP,CACA,MAAO,CAAAC,SAAS,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}