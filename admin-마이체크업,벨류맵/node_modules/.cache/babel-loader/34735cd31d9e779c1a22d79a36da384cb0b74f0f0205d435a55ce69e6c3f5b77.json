{"ast":null,"code":"export function getCompany() {\n  const company = [{\n    code: '01',\n    name: '마이체크업'\n  }, {\n    code: '02',\n    name: '벨류맵'\n  }];\n  return company;\n}\nexport function getCode(type) {\n  const company = [{\n    type: '01',\n    code: '1',\n    name: '마이체크업'\n  }, {\n    type: '02',\n    code: '02',\n    name: '벨류맵'\n  }];\n  for (let idx of company) {\n    if (idx.type === type) return idx.code;\n  }\n  return '00';\n}\nexport function excelDownload(data) {\n  const excelHandler = {\n    getExcelFileName: () => {\n      return \"유저 데이터.xlsx\";\n    },\n    getSheetName: () => {\n      return \"userData\";\n    },\n    getExcelData: () => {\n      return data;\n    },\n    getWorksheet: () => {\n      return XLSX.utils.json_to_sheet(excelHandler.getExcelData());\n    }\n  };\n  const datas = excelHandler.getWorksheet();\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, datas, excelHandler.getSheetName());\n  XLSX.writeFile(workbook, excelHandler.getExcelFileName());\n  console.log(data);\n}","map":{"version":3,"names":["getCompany","company","code","name","getCode","type","idx","excelDownload","data","excelHandler","getExcelFileName","getSheetName","getExcelData","getWorksheet","XLSX","utils","json_to_sheet","datas","workbook","book_new","book_append_sheet","writeFile","console","log"],"sources":["D:/IdeaProjects/admin/src/utils/common.ts"],"sourcesContent":["\r\nimport {Person} from '../@types/common';\r\n\r\nexport function getCompany(){\r\n    const company = [\r\n        {\r\n            code : '01',\r\n            name : '마이체크업'\r\n        },\r\n        {\r\n            code : '02',\r\n            name : '벨류맵'\r\n        }\r\n    ];\r\n\r\n    return company;\r\n}\r\nexport function getCode(type : string){\r\n    const company = [\r\n        {\r\n            type : '01',\r\n            code : '1',\r\n            name : '마이체크업'\r\n        },\r\n        {\r\n            type : '02',\r\n            code : '02',\r\n            name : '벨류맵'\r\n        }\r\n    ];\r\n\r\n    for(let idx of company){\r\n        if(idx.type === type) return idx.code;\r\n    }\r\n    return '00';\r\n}\r\n\r\nexport function excelDownload(data : Person[]){\r\n    const excelHandler = {\r\n        getExcelFileName: () => {\r\n            return \"유저 데이터.xlsx\";\r\n        },\r\n        getSheetName: () => {\r\n            return \"userData\";\r\n        },\r\n        getExcelData: () => {\r\n            return data;\r\n        },\r\n        getWorksheet: () => {\r\n            return XLSX.utils.json_to_sheet(excelHandler.getExcelData());\r\n        },\r\n    };\r\n\r\n    const datas = excelHandler.getWorksheet();\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, datas, excelHandler.getSheetName());\r\n    XLSX.writeFile(workbook, excelHandler.getExcelFileName());\r\n    console.log(data);\r\n\r\n}\r\n\r\n\r\n"],"mappings":"AAGA,OAAO,SAASA,UAAUA,CAAA,EAAE;EACxB,MAAMC,OAAO,GAAG,CACZ;IACIC,IAAI,EAAG,IAAI;IACXC,IAAI,EAAG;EACX,CAAC,EACD;IACID,IAAI,EAAG,IAAI;IACXC,IAAI,EAAG;EACX,CAAC,CACJ;EAED,OAAOF,OAAO;AAClB;AACA,OAAO,SAASG,OAAOA,CAACC,IAAa,EAAC;EAClC,MAAMJ,OAAO,GAAG,CACZ;IACII,IAAI,EAAG,IAAI;IACXH,IAAI,EAAG,GAAG;IACVC,IAAI,EAAG;EACX,CAAC,EACD;IACIE,IAAI,EAAG,IAAI;IACXH,IAAI,EAAG,IAAI;IACXC,IAAI,EAAG;EACX,CAAC,CACJ;EAED,KAAI,IAAIG,GAAG,IAAIL,OAAO,EAAC;IACnB,IAAGK,GAAG,CAACD,IAAI,KAAKA,IAAI,EAAE,OAAOC,GAAG,CAACJ,IAAI;EACzC;EACA,OAAO,IAAI;AACf;AAEA,OAAO,SAASK,aAAaA,CAACC,IAAe,EAAC;EAC1C,MAAMC,YAAY,GAAG;IACjBC,gBAAgB,EAAEA,CAAA,KAAM;MACpB,OAAO,aAAa;IACxB,CAAC;IACDC,YAAY,EAAEA,CAAA,KAAM;MAChB,OAAO,UAAU;IACrB,CAAC;IACDC,YAAY,EAAEA,CAAA,KAAM;MAChB,OAAOJ,IAAI;IACf,CAAC;IACDK,YAAY,EAAEA,CAAA,KAAM;MAChB,OAAOC,IAAI,CAACC,KAAK,CAACC,aAAa,CAACP,YAAY,CAACG,YAAY,CAAC,CAAC,CAAC;IAChE;EACJ,CAAC;EAED,MAAMK,KAAK,GAAGR,YAAY,CAACI,YAAY,CAAC,CAAC;EACzC,MAAMK,QAAQ,GAAGJ,IAAI,CAACC,KAAK,CAACI,QAAQ,CAAC,CAAC;EACtCL,IAAI,CAACC,KAAK,CAACK,iBAAiB,CAACF,QAAQ,EAAED,KAAK,EAAER,YAAY,CAACE,YAAY,CAAC,CAAC,CAAC;EAC1EG,IAAI,CAACO,SAAS,CAACH,QAAQ,EAAET,YAAY,CAACC,gBAAgB,CAAC,CAAC,CAAC;EACzDY,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;AAErB"},"metadata":{},"sourceType":"module","externalDependencies":[]}