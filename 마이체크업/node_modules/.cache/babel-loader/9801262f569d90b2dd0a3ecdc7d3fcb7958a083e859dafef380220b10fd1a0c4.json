{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\valuemap\\\\src\\\\component\\\\pdfView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nexport default function pdfView({\n  pdfUrl\n}) {\n  _s();\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [numPages, setNumPages] = useState(null);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [pageNumber, setPageNumber] = useState(1);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const changePage = offset => {\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\n  };\n  const previousPage = () => {\n    changePage(-1);\n  };\n  const nextPage = () => {\n    changePage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex_center flex-col\",\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      className: styles.doc,\n      file: path,\n      onLoadSuccess: onDocumentLoadSuccess,\n      onLoadError: onDocumentError,\n      onPassword: onDocumentLocked,\n      children: Array.from(new Array(numPages), (_, index) => {\n        return /*#__PURE__*/_jsxDEV(Page, {\n          className: styles.page,\n          pageNumber: index + 1,\n          width: 700,\n          renderAnnotationLayer: false,\n          scale: scale\n        }, `page_${index + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n}\n_s(pdfView, \"YLJz20aPqXTJ8p9+Yj/tBc0QyPE=\");\n;","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","pdfView","pdfUrl","_s","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","className","children","styles","doc","file","path","onLoadSuccess","onLoadError","onDocumentError","onPassword","onDocumentLocked","Array","from","_","index","page","width","renderAnnotationLayer","scale","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/IdeaProjects/valuemap/src/component/pdfView.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs  } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\ninterface PdfViewerProps {\r\n    pdfUrl: string;\r\n}\r\n\r\nexport default function pdfView ({ pdfUrl } : any)  {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const [numPages, setNumPages] = useState<number | null>(null);\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const [pageNumber, setPageNumber] = useState<number>(1);\r\n\r\n        const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\r\n            setNumPages(numPages);\r\n        };\r\n\r\n        const changePage = (offset: number) => {\r\n            setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n        };\r\n\r\n        const previousPage = () => {\r\n            changePage(-1);\r\n        };\r\n\r\n        const nextPage = () => {\r\n            changePage(1);\r\n        };\r\n\r\n        return (\r\n            <div className='w-full h-full flex_center flex-col'>\r\n                <Document\r\n                    className={styles.doc}\r\n                    file={path}\r\n                    onLoadSuccess={onDocumentLoadSuccess}\r\n                    onLoadError={onDocumentError}\r\n                    onPassword={onDocumentLocked}\r\n                >\r\n                    {Array.from(new Array(numPages), (_, index) => {\r\n                        return (\r\n                            <Page\r\n                                key={`page_${index + 1}`}\r\n                                className={styles.page}\r\n                                pageNumber={index + 1}\r\n                                width={700}\r\n                                renderAnnotationLayer={false}\r\n                                scale={scale}\r\n                            />\r\n                        );\r\n                    })}\r\n                </Document>\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAS,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnDF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAI,2CAA0CJ,KAAK,CAACK,OAAQ,gBAAe;AAK9G,eAAe,SAASC,OAAOA,CAAE;EAAEC;AAAa,CAAC,EAAG;EAAAC,EAAA;EAChD;EACI,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACjE;EACI,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EAEvD,MAAMgB,qBAAqB,GAAGA,CAAC;IAAEJ;EAA+B,CAAC,KAAK;IAClEC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMK,UAAU,GAAIC,MAAc,IAAK;IACnCH,aAAa,CAACI,cAAc,IAAIA,cAAc,GAAGD,MAAM,CAAC;EAC5D,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBH,UAAU,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACnBJ,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACIZ,OAAA;IAAKiB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eAC/ClB,OAAA,CAACJ,QAAQ;MACLqB,SAAS,EAAEE,MAAM,CAACC,GAAI;MACtBC,IAAI,EAAEC,IAAK;MACXC,aAAa,EAAEZ,qBAAsB;MACrCa,WAAW,EAAEC,eAAgB;MAC7BC,UAAU,EAAEC,gBAAiB;MAAAT,QAAA,EAE5BU,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAACrB,QAAQ,CAAC,EAAE,CAACuB,CAAC,EAAEC,KAAK,KAAK;QAC3C,oBACI/B,OAAA,CAACH,IAAI;UAEDoB,SAAS,EAAEE,MAAM,CAACa,IAAK;UACvBvB,UAAU,EAAEsB,KAAK,GAAG,CAAE;UACtBE,KAAK,EAAE,GAAI;UACXC,qBAAqB,EAAE,KAAM;UAC7BC,KAAK,EAAEA;QAAM,GALP,QAAOJ,KAAK,GAAG,CAAE,EAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAM3B,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACjC,EAAA,CA9CmBF,OAAO;AA8C1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}