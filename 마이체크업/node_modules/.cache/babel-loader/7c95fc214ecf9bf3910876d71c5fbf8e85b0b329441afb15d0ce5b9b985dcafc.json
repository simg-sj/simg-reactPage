{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\valuemap\\\\src\\\\component\\\\pdfView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nexport default function pdfView({\n  pdfUrl\n}) {\n  _s();\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [numPages, setNumPages] = useState(0);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const onDocumentError = error => {\n    logger.error(\"pdf viewer error\", error);\n  };\n  const onDocumentLocked = () => {\n    logger.error(\"pdf locked\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex_center flex-col\",\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: 'sample.pdf',\n      onLoadSuccess: onDocumentLoadSuccess,\n      onLoadError: onDocumentError,\n      onPassword: onDocumentLocked,\n      children: Array.from(new Array(numPages), (_, index) => {\n        return /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: index + 1,\n          width: 700,\n          renderAnnotationLayer: false\n        }, `page_${index + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n}\n_s(pdfView, \"PHJ2BPOWSuQdli/JQqJ/jFe5NS0=\");\n;","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","pdfView","pdfUrl","_s","numPages","setNumPages","onDocumentLoadSuccess","onDocumentError","error","logger","onDocumentLocked","className","children","file","onLoadSuccess","onLoadError","onPassword","Array","from","_","index","pageNumber","width","renderAnnotationLayer","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/IdeaProjects/valuemap/src/component/pdfView.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs  } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\ntype PDFViewerProps = {\r\n    path: string;\r\n    scale: number;\r\n};\r\n\r\n\r\nexport default function pdfView ({ pdfUrl } : any)  {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [numPages, setNumPages] = useState<number>(0);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }: pdfjs.PDFDocumentProxy) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n    const onDocumentError = (error: Error) => {\r\n        logger.error(\"pdf viewer error\", error);\r\n    };\r\n\r\n    const onDocumentLocked = () => {\r\n        logger.error(\"pdf locked\");\r\n    };\r\n\r\n        return (\r\n            <div className='w-full h-full flex_center flex-col'>\r\n                <Document\r\n                    file={'sample.pdf'}\r\n                    onLoadSuccess={onDocumentLoadSuccess}\r\n                    onLoadError={onDocumentError}\r\n                    onPassword={onDocumentLocked}\r\n                >\r\n                    {Array.from(new Array(numPages), (_, index) => {\r\n                        return (\r\n                            <Page\r\n                                key={`page_${index + 1}`}\r\n                                pageNumber={index + 1}\r\n                                width={700}\r\n                                renderAnnotationLayer={false}\r\n                            />\r\n                        );\r\n                    })}\r\n                </Document>\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAS,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnDF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAI,2CAA0CJ,KAAK,CAACK,OAAQ,gBAAe;AAO9G,eAAe,SAASC,OAAOA,CAAE;EAAEC;AAAa,CAAC,EAAG;EAAAC,EAAA;EAChD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EAEnD,MAAMc,qBAAqB,GAAGA,CAAC;IAAEF;EAAiC,CAAC,KAAK;IACpEC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMG,eAAe,GAAIC,KAAY,IAAK;IACtCC,MAAM,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC3C,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,MAAM,CAACD,KAAK,CAAC,YAAY,CAAC;EAC9B,CAAC;EAEG,oBACIX,OAAA;IAAKc,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eAC/Cf,OAAA,CAACJ,QAAQ;MACLoB,IAAI,EAAE,YAAa;MACnBC,aAAa,EAAER,qBAAsB;MACrCS,WAAW,EAAER,eAAgB;MAC7BS,UAAU,EAAEN,gBAAiB;MAAAE,QAAA,EAE5BK,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAACb,QAAQ,CAAC,EAAE,CAACe,CAAC,EAAEC,KAAK,KAAK;QAC3C,oBACIvB,OAAA,CAACH,IAAI;UAED2B,UAAU,EAAED,KAAK,GAAG,CAAE;UACtBE,KAAK,EAAE,GAAI;UACXC,qBAAqB,EAAE;QAAM,GAHvB,QAAOH,KAAK,GAAG,CAAE,EAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAI3B,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACxB,EAAA,CArCmBF,OAAO;AAqC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}