{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\mycheckup\\\\src\\\\component\\\\signature.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport SignatureCanvas from 'react-signature-canvas';\nimport styled from 'styled-components';\nimport { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport cn from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasWrapper = styled.div`\n  position: relative;\n  background-color : white;\n  width: 350px;\n  height: 200px;\n`;\n_c = CanvasWrapper;\nconst CanvasPlaceholder = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n    background-color : white;\n  transform: translate(-50%, -50%);\n  color: black;\n`;\n_c2 = CanvasPlaceholder;\nconst Signature = ({\n  name,\n  setMsg,\n  setIsOpen,\n  setSign\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isSigned, setIsSigned] = useState(false);\n  const save = async () => {\n    try {\n      if (name) {\n        const image = canvasRef.current.getTrimmedCanvas().toDataURL('image/png'); // image 변수에 이미지 다운로드 링크 할당, png를 jpg등의 다른 확장자로 변경 가능\n        const decodedURL = image.replace(/^data:image\\/\\w+;base64,/, '');\n        const buf = Buffer.from(decodedURL, 'base64');\n        const blob = new Blob([buf], {\n          type: 'image/png'\n        });\n        const sign = new FormData();\n        let today = dayjs().format('YYYY-MM-DD');\n        const file = new File([blob], name + '_서명_' + today.toString().replaceAll('-', '') + '.png', {\n          type: 'image/png'\n        });\n        sign.append('sign', file);\n        const response = await axios.post('https://insurance-open-api.simg.kr/api/v1/prod/sign', sign, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 200) {\n          setSign(response.data.signName);\n        } else {\n          setIsOpen(true);\n          setMsg('서비스 오류입니다.');\n          console.error('Error uploading images:', response.statusText);\n        }\n      } else {\n        alert('이릅을 입력해주세요.');\n      }\n    } catch (error) {\n      setIsOpen(true);\n      setMsg('서비스 오류입니다.');\n      console.log(error);\n    }\n\n    /*link.href = image; // a 태그의 href 속성으로 이미지 다운로드 링크\r\n    link.download = 'sign_image.png'; // 다운로드 파일의 기본 이름 설정\r\n    link.click(); // 임의의 a 태그를 클릭하여 다운로드 실행*/\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center  my-16 flex-col \",\n    children: [/*#__PURE__*/_jsxDEV(CanvasWrapper, {\n      className: \"border\",\n      children: [!isSigned && /*#__PURE__*/_jsxDEV(CanvasPlaceholder, {\n        children: \"\\uC5EC\\uAE30\\uC5D0 \\uC11C\\uBA85\\uC744 \\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SignatureCanvas, {\n        canvasProps: {\n          width: '350px',\n          height: '200px'\n        },\n        ref: canvasRef,\n        onBegin: () => {\n          setIsSigned(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-[350px] mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'button',\n        className: \"basis-1/2 mx-8 py-2 border bg_base text-white rounded-lg\",\n        onClick: event => {\n          canvasRef.current.clear(); // 리셋\n          setIsSigned(false);\n          setSign('');\n        },\n        children: \"\\uCD08\\uAE30\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'button',\n        className: cn('basis-1/2 border mx-8 rounded-lg', {\n          'bg-white': !isSigned,\n          'bg_base text-white': isSigned\n        }),\n        disabled: !isSigned // 버튼 disabled\n        ,\n        onClick: () => save(),\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Signature, \"mjZ2UVvdc8F7uvuWW24CrrkIF+M=\");\n_c3 = Signature;\nexport default Signature;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CanvasWrapper\");\n$RefreshReg$(_c2, \"CanvasPlaceholder\");\n$RefreshReg$(_c3, \"Signature\");","map":{"version":3,"names":["React","useState","useRef","SignatureCanvas","styled","Buffer","axios","dayjs","cn","jsxDEV","_jsxDEV","CanvasWrapper","div","_c","CanvasPlaceholder","_c2","Signature","name","setMsg","setIsOpen","setSign","_s","canvasRef","isSigned","setIsSigned","save","image","current","getTrimmedCanvas","toDataURL","decodedURL","replace","buf","from","blob","Blob","type","sign","FormData","today","format","file","File","toString","replaceAll","append","response","post","headers","status","data","signName","console","error","statusText","alert","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","canvasProps","width","height","ref","onBegin","onClick","event","clear","disabled","_c3","$RefreshReg$"],"sources":["D:/project/mycheckup/src/component/signature.tsx"],"sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport SignatureCanvas from 'react-signature-canvas';\r\nimport styled from 'styled-components';\r\nimport {Buffer} from \"buffer\";\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\nimport cn from 'classnames';\r\n\r\nconst CanvasWrapper = styled.div`\r\n  position: relative;\r\n  background-color : white;\r\n  width: 350px;\r\n  height: 200px;\r\n`;\r\n\r\nconst CanvasPlaceholder = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n    background-color : white;\r\n  transform: translate(-50%, -50%);\r\n  color: black;\r\n`;\r\ninterface openType{\r\n    setMsg : React.Dispatch<React.SetStateAction<string>>;\r\n    setIsOpen : React.Dispatch<React.SetStateAction<boolean>>;\r\n    setSign : React.Dispatch<React.SetStateAction<any>>;\r\n    name : string;\r\n}\r\nconst Signature : React.FC<openType> = ({name, setMsg, setIsOpen,setSign}) => {\r\n    const canvasRef = useRef<any>(null);\r\n    const [isSigned, setIsSigned] = useState<boolean>(false);\r\n\r\n    const save = async () => {\r\n        try {\r\n            if(name){\r\n                const image = canvasRef.current.getTrimmedCanvas().toDataURL('image/png'); // image 변수에 이미지 다운로드 링크 할당, png를 jpg등의 다른 확장자로 변경 가능\r\n                const decodedURL = image.replace(/^data:image\\/\\w+;base64,/, '');\r\n                const buf = Buffer.from(decodedURL, 'base64');\r\n                const blob = new Blob([buf], { type: 'image/png' });\r\n                const sign = new FormData();\r\n                let today = dayjs().format('YYYY-MM-DD');\r\n                const file = new File([blob], name + '_서명_' + today.toString().replaceAll('-', '') + '.png', { type: 'image/png' });\r\n                sign.append('sign',file);\r\n                const response = await axios.post('https://insurance-open-api.simg.kr/api/v1/prod/sign', sign, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    },\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    setSign(response.data.signName);\r\n                } else {\r\n                    setIsOpen(true);\r\n                    setMsg('서비스 오류입니다.');\r\n                    console.error('Error uploading images:', response.statusText);\r\n                }\r\n            }else {\r\n                alert('이릅을 입력해주세요.');\r\n            }\r\n        }catch(error) {\r\n            setIsOpen(true);\r\n            setMsg('서비스 오류입니다.')\r\n            console.log(error);\r\n        }\r\n\r\n        /*link.href = image; // a 태그의 href 속성으로 이미지 다운로드 링크\r\n        link.download = 'sign_image.png'; // 다운로드 파일의 기본 이름 설정\r\n        link.click(); // 임의의 a 태그를 클릭하여 다운로드 실행*/\r\n    };\r\n    return (\r\n        <div className='flex justify-center items-center  my-16 flex-col '>\r\n            <CanvasWrapper className = 'border'>\r\n                {!isSigned && (\r\n                    <CanvasPlaceholder>\r\n                        여기에 서명을 해주세요.\r\n                    </CanvasPlaceholder>\r\n                )}\r\n                <SignatureCanvas\r\n                    canvasProps={{width : '350px', height : '200px'}}\r\n                    ref={canvasRef}\r\n                    onBegin={() => {\r\n                        setIsSigned(true);\r\n                    }}\r\n                />\r\n            </CanvasWrapper>\r\n            <div className='flex w-[350px] mt-4'>\r\n                <button\r\n                    type={'button'}\r\n                    className='basis-1/2 mx-8 py-2 border bg_base text-white rounded-lg'\r\n                    onClick={(event : React.MouseEvent<HTMLButtonElement>) => {\r\n                        canvasRef.current.clear(); // 리셋\r\n                        setIsSigned(false);\r\n                        setSign('');\r\n                    }}\r\n                >\r\n                    초기화\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={cn('basis-1/2 border mx-8 rounded-lg',{'bg-white': !isSigned, 'bg_base text-white' : isSigned})}\r\n                    disabled={!isSigned} // 버튼 disabled\r\n                    onClick={() => save()}\r\n                >\r\n                    확인\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signature;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}