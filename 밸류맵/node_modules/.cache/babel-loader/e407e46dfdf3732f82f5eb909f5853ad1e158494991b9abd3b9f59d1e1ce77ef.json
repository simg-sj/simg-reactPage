{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\valuemap\\\\src\\\\component\\\\pdfView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nfunction PdfView({\n  setOpen,\n  type\n}) {\n  _s();\n  const isPc = useMediaQuery({\n    query: \"(min-width: 990px)\"\n  });\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pdfUrl, setPdfUrl] = useState('');\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const changePage = offset => {\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\n  };\n  const previousPage = () => {\n    changePage(-1);\n  };\n  const nextPage = () => {\n    changePage(1);\n  };\n  const downloadPdf = async () => {\n    //const pdfUrl = 'https://test-mycheckup-insu.simg.kr/download-pdf';\n    // PDF 파일 다운로드 링크 생성\n    /* const link = document.createElement('a');\r\n     link.href = pdfUrl;\r\n     let name = sessionStorage.getItem('name');\r\n     if(type === 'pdf') link.setAttribute('download', '프로미 임대차계약소송보험_보험약관.pdf');\r\n     if(type === 'regi') link.setAttribute('download', `${name} 보험가입 증명서.pdf`);\r\n       document.body.appendChild(link);\r\n     link.click();\r\n     document.body.removeChild(link);*/\n    try {\n      axios.get(pdfUrl, {\n        responseType: 'blob'\n      }).then(response => {\n        // 다운로드할 파일의 blob 생성\n        const blob = new Blob([response.data]);\n\n        // blob을 URL로 변환\n        const url = window.URL.createObjectURL(blob);\n\n        // a 태그를 생성하여 다운로드\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'example.pdf'; // 다운로드할 파일 이름 설정\n        document.body.appendChild(a);\n        a.click();\n\n        // 다운로드 후 URL 해제\n        window.URL.revokeObjectURL(url);\n      }).catch(error => {\n        console.error('PDF 다운로드 중 오류 발생:', error);\n      });\n    } catch (error) {\n      console.error('PDF 다운로드 중 오류 발생:', error);\n    }\n  };\n  useEffect(() => {\n    if (type === 'regi') {\n      const getPdfUrl = async () => {\n        try {\n          let cmpk = sessionStorage.getItem('cmpk');\n          let join = sessionStorage.getItem('join');\n          console.log(join);\n          const response = await axios.get(`https://insurance-info.simg.kr/get-pdf?key=${cmpk}&today=${join}`, {\n            responseType: 'blob'\n          });\n          const pdfBlob = new Blob([response.data], {\n            type: 'application/pdf'\n          });\n          setPdfUrl(URL.createObjectURL(pdfBlob));\n        } catch (error) {\n          alert('서비스 오류입니다. \\n본사에 문의주시기 바랍니다. \\n☎ 1877-3006');\n          console.error('Error fetching PDF:', error);\n        }\n      };\n      getPdfUrl();\n    } else {\n      setPdfUrl('/프로미 임대차계약소송_보험약관.pdf');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full  flex_center flex-col bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(Document, {\n      file: pdfUrl,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: pageNumber,\n        width: isPc ? 600 : 380\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col absolute bottom-0 bg-white w-full pb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_center space-x-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pageNumber <= 1,\n          onClick: previousPage,\n          children: \"\\uC774\\uC804 \\uD398\\uC774\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Page \", pageNumber, \" of \", numPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pageNumber >= (numPages || 1),\n          onClick: nextPage,\n          children: \"\\uB2E4\\uC74C \\uD398\\uC774\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-6 flex_center mt-4 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-color\",\n          onClick: event => setOpen(false),\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-color\",\n          onClick: downloadPdf,\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(PdfView, \"1bK6Ym6/KX4GB6jBZA1uDqmN59o=\", false, function () {\n  return [useMediaQuery];\n});\n_c = PdfView;\n;\nexport default PdfView;\nvar _c;\n$RefreshReg$(_c, \"PdfView\");","map":{"version":3,"names":["React","useState","useEffect","axios","Document","Page","pdfjs","useMediaQuery","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PdfView","setOpen","type","_s","isPc","query","numPages","setNumPages","pageNumber","setPageNumber","pdfUrl","setPdfUrl","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","downloadPdf","get","responseType","then","response","blob","Blob","data","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","catch","error","console","getPdfUrl","cmpk","sessionStorage","getItem","join","log","pdfBlob","alert","className","children","file","onLoadSuccess","width","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","event","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/valuemap/src/component/pdfView.tsx"],"sourcesContent":["import React, {SetStateAction, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Document, Page, pdfjs  } from 'react-pdf'\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport  axiosInstans  from '../api/axiosInstans';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\ntype Props = {\r\n    setOpen : React.Dispatch<SetStateAction<boolean>>;\r\n    type : string;\r\n};\r\n\r\n\r\nfunction PdfView ({setOpen, type } : Props)  {\r\n    const isPc = useMediaQuery({ query: \"(min-width: 990px)\" });\r\n    const [numPages, setNumPages] = useState<number | null>(null);\r\n    const [pageNumber, setPageNumber] = useState<number>(1);\r\n    const [pdfUrl, setPdfUrl] = useState('');\r\n\r\n\r\n    const onDocumentLoadSuccess = ({ numPages } : any) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n\r\n    const changePage = (offset: number) => {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    };\r\n\r\n    const previousPage = () => {\r\n        changePage(-1);\r\n    };\r\n\r\n    const nextPage = () => {\r\n        changePage(1);\r\n    };\r\n    const downloadPdf = async () => {\r\n        //const pdfUrl = 'https://test-mycheckup-insu.simg.kr/download-pdf';\r\n        // PDF 파일 다운로드 링크 생성\r\n       /* const link = document.createElement('a');\r\n        link.href = pdfUrl;\r\n        let name = sessionStorage.getItem('name');\r\n        if(type === 'pdf') link.setAttribute('download', '프로미 임대차계약소송보험_보험약관.pdf');\r\n        if(type === 'regi') link.setAttribute('download', `${name} 보험가입 증명서.pdf`);\r\n\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);*/\r\n        try {\r\n            axios.get(pdfUrl, { responseType: 'blob' })\r\n                .then(response => {\r\n                    // 다운로드할 파일의 blob 생성\r\n                    const blob = new Blob([response.data]);\r\n\r\n                    // blob을 URL로 변환\r\n                    const url = window.URL.createObjectURL(blob);\r\n\r\n                    // a 태그를 생성하여 다운로드\r\n                    const a = document.createElement('a');\r\n                    a.href = url;\r\n                    a.download = 'example.pdf'; // 다운로드할 파일 이름 설정\r\n                    document.body.appendChild(a);\r\n                    a.click();\r\n\r\n                    // 다운로드 후 URL 해제\r\n                    window.URL.revokeObjectURL(url);\r\n                })\r\n                .catch(error => {\r\n                    console.error('PDF 다운로드 중 오류 발생:', error);\r\n                });\r\n        } catch (error) {\r\n            console.error('PDF 다운로드 중 오류 발생:', error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(type === 'regi'){\r\n            const getPdfUrl = async () => {\r\n                try {\r\n                    let cmpk = sessionStorage.getItem('cmpk');\r\n                    let join = sessionStorage.getItem('join');\r\n                    console.log(join);\r\n                    const response = await axios.get(`https://insurance-info.simg.kr/get-pdf?key=${cmpk}&today=${join}`, {\r\n                        responseType: 'blob'\r\n                    });\r\n                    const pdfBlob = new Blob([response.data], {type: 'application/pdf'});\r\n                    setPdfUrl(URL.createObjectURL(pdfBlob));\r\n                } catch (error) {\r\n                    alert('서비스 오류입니다. \\n본사에 문의주시기 바랍니다. \\n☎ 1877-3006');\r\n                    console.error('Error fetching PDF:', error);\r\n                }\r\n            };\r\n            getPdfUrl();\r\n        }else {\r\n            setPdfUrl('/프로미 임대차계약소송_보험약관.pdf');\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className='w-full h-full  flex_center flex-col bg-white'>\r\n            <Document\r\n                file={pdfUrl}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n                <Page pageNumber={pageNumber} width={isPc ? 600 : 380}/>\r\n            </Document>\r\n            <div className='flex flex-col absolute bottom-0 bg-white w-full pb-4'>\r\n                <div className='flex_center space-x-6'>\r\n                    <button disabled={pageNumber <= 1} onClick={previousPage}>\r\n                        이전 페이지\r\n                    </button>\r\n                    <p>Page {pageNumber} of {numPages}</p>\r\n                    <button disabled={pageNumber >= (numPages || 1)} onClick={nextPage}>\r\n                        다음 페이지\r\n                    </button>\r\n                </div>\r\n                <div className='flex space-x-6 flex_center mt-4 text-white'>\r\n                    <button className='button-color' onClick={(event : React.MouseEvent<HTMLButtonElement>) => setOpen(false)}>닫기</button>\r\n                    <button className='button-color' onClick={downloadPdf}>저장</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PdfView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAmBC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAS,WAAW;AAClD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjDH,KAAK,CAACI,mBAAmB,CAACC,SAAS,GAAI,2CAA0CL,KAAK,CAACM,OAAQ,gBAAe;AAO9G,SAASC,OAAOA,CAAE;EAACC,OAAO;EAAEC;AAAa,CAAC,EAAG;EAAAC,EAAA;EACzC,MAAMC,IAAI,GAAGV,aAAa,CAAC;IAAEW,KAAK,EAAE;EAAqB,CAAC,CAAC;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAS,CAAC,CAAC;EACvD,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAGxC,MAAMwB,qBAAqB,GAAGA,CAAC;IAAEN;EAAe,CAAC,KAAK;IAClDC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAGD,MAAMO,UAAU,GAAIC,MAAc,IAAK;IACnCL,aAAa,CAACM,cAAc,IAAIA,cAAc,GAAGD,MAAM,CAAC;EAC5D,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBH,UAAU,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACnBJ,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC;EACD,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA;IACD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;IAEQ,IAAI;MACA5B,KAAK,CAAC6B,GAAG,CAACT,MAAM,EAAE;QAAEU,YAAY,EAAE;MAAO,CAAC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAI;QACd;QACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAEtC;QACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;;QAE5C;QACA,MAAMO,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;QACZI,CAAC,CAACI,QAAQ,GAAG,aAAa,CAAC,CAAC;QAC5BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;QAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;;QAET;QACAV,MAAM,CAACC,GAAG,CAACU,eAAe,CAACZ,GAAG,CAAC;MACnC,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACV,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC7C;EACJ,CAAC;EAEDnD,SAAS,CAAC,MAAM;IACZ,IAAGa,IAAI,KAAK,MAAM,EAAC;MACf,MAAMwC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACA,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;UACzC,IAAIC,IAAI,GAAGF,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;UACzCJ,OAAO,CAACM,GAAG,CAACD,IAAI,CAAC;UACjB,MAAMxB,QAAQ,GAAG,MAAMhC,KAAK,CAAC6B,GAAG,CAAE,8CAA6CwB,IAAK,UAASG,IAAK,EAAC,EAAE;YACjG1B,YAAY,EAAE;UAClB,CAAC,CAAC;UACF,MAAM4B,OAAO,GAAG,IAAIxB,IAAI,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;YAACvB,IAAI,EAAE;UAAiB,CAAC,CAAC;UACpES,SAAS,CAACiB,GAAG,CAACC,eAAe,CAACmB,OAAO,CAAC,CAAC;QAC3C,CAAC,CAAC,OAAOR,KAAK,EAAE;UACZS,KAAK,CAAC,4CAA4C,CAAC;UACnDR,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC/C;MACJ,CAAC;MACDE,SAAS,CAAC,CAAC;IACf,CAAC,MAAK;MACF/B,SAAS,CAAC,uBAAuB,CAAC;IACtC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIf,OAAA;IAAKsD,SAAS,EAAC,8CAA8C;IAAAC,QAAA,gBACzDvD,OAAA,CAACL,QAAQ;MACL6D,IAAI,EAAE1C,MAAO;MACb2C,aAAa,EAAEzC,qBAAsB;MAAAuC,QAAA,eAErCvD,OAAA,CAACJ,IAAI;QAACgB,UAAU,EAAEA,UAAW;QAAC8C,KAAK,EAAElD,IAAI,GAAG,GAAG,GAAG;MAAI;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACX9D,OAAA;MAAKsD,SAAS,EAAC,sDAAsD;MAAAC,QAAA,gBACjEvD,OAAA;QAAKsD,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBAClCvD,OAAA;UAAQ+D,QAAQ,EAAEnD,UAAU,IAAI,CAAE;UAACoD,OAAO,EAAE5C,YAAa;UAAAmC,QAAA,EAAC;QAE1D;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9D,OAAA;UAAAuD,QAAA,GAAG,OAAK,EAAC3C,UAAU,EAAC,MAAI,EAACF,QAAQ;QAAA;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtC9D,OAAA;UAAQ+D,QAAQ,EAAEnD,UAAU,KAAKF,QAAQ,IAAI,CAAC,CAAE;UAACsD,OAAO,EAAE3C,QAAS;UAAAkC,QAAA,EAAC;QAEpE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACN9D,OAAA;QAAKsD,SAAS,EAAC,4CAA4C;QAAAC,QAAA,gBACvDvD,OAAA;UAAQsD,SAAS,EAAC,cAAc;UAACU,OAAO,EAAGC,KAA2C,IAAK5D,OAAO,CAAC,KAAK,CAAE;UAAAkD,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtH9D,OAAA;UAAQsD,SAAS,EAAC,cAAc;UAACU,OAAO,EAAE1C,WAAY;UAAAiC,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvD,EAAA,CA7GQH,OAAO;EAAA,QACCN,aAAa;AAAA;AAAAoE,EAAA,GADrB9D,OAAO;AA6Gf;AAED,eAAeA,OAAO;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}