{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\valuemap\\\\src\\\\component\\\\modals.tsx\",\n  _s = $RefreshSig$();\nimport Modal from \"react-modal\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { modalStyles } from \"../utils/common\";\nimport PdfView from \"./pdfView\"; // PdfView 컴포넌트 import 추가\nimport React from \"react\";\nimport Process from './process';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modals({\n  open,\n  type,\n  setOpen\n}) {\n  _s();\n  const isPc = useMediaQuery({\n    query: \"(min-width: 990px)\"\n  });\n  const styles = modalStyles('clim');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    style: !isPc ? styles.mobi : styles.web,\n    children: [type === 'pdf' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(PdfView, {\n        setOpen: setOpen,\n        type: 'pdf'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this), type === 'process' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full\",\n      children: /*#__PURE__*/_jsxDEV(Process, {\n        setOpen: setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this), type === 'regi' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(PdfView, {\n        setOpen: setOpen,\n        type: 'regi'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this), type === 'common' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"asd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Modals, \"mcbHTBjKkZrxFjNAKSJze56CUaE=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Modals;\nvar _c;\n$RefreshReg$(_c, \"Modals\");","map":{"version":3,"names":["Modal","useMediaQuery","modalStyles","PdfView","React","Process","jsxDEV","_jsxDEV","Modals","open","type","setOpen","_s","isPc","query","styles","isOpen","style","mobi","web","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IdeaProjects/valuemap/src/component/modals.tsx"],"sourcesContent":["import Modal from \"react-modal\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { modalStyles } from \"../utils/common\";\r\nimport PdfView from \"./pdfView\"; // PdfView 컴포넌트 import 추가\r\nimport React, { SetStateAction } from \"react\";\r\nimport Process from './process';\r\n\r\ninterface Props {\r\n    type : string;\r\n    open: boolean;\r\n    setOpen: React.Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport default function Modals({ open, type, setOpen }: Props) {\r\n    const isPc = useMediaQuery({ query: \"(min-width: 990px)\" });\r\n    const styles = modalStyles('clim');\r\n\r\n    return (\r\n        <Modal isOpen={open} style={!isPc ? styles.mobi : styles.web}>\r\n                {\r\n                    type === 'pdf' &&\r\n                    <div className='w-full'>\r\n                        <PdfView setOpen={setOpen} type={'pdf'}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    type === 'process' &&\r\n                    <div className='w-full h-full'>\r\n                        <Process setOpen={setOpen}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    type === 'regi' &&\r\n                    <div className='w-full'>\r\n                        <PdfView setOpen={setOpen} type={'regi'}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    type === 'common' &&\r\n                    <div>\r\n                        asd\r\n                    </div>\r\n                }\r\n            </Modal>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAOC,KAAK,MAA0B,OAAO;AAC7C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhC,eAAe,SAASC,MAAMA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAMC,IAAI,GAAGZ,aAAa,CAAC;IAAEa,KAAK,EAAE;EAAqB,CAAC,CAAC;EAC3D,MAAMC,MAAM,GAAGb,WAAW,CAAC,MAAM,CAAC;EAElC,oBACIK,OAAA,CAACP,KAAK;IAACgB,MAAM,EAAEP,IAAK;IAACQ,KAAK,EAAE,CAACJ,IAAI,GAAGE,MAAM,CAACG,IAAI,GAAGH,MAAM,CAACI,GAAI;IAAAC,QAAA,GAEjDV,IAAI,KAAK,KAAK,iBACdH,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACnBb,OAAA,CAACJ,OAAO;QAACQ,OAAO,EAAEA,OAAQ;QAACD,IAAI,EAAE;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAGNf,IAAI,KAAK,SAAS,iBAClBH,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC1Bb,OAAA,CAACF,OAAO;QAACM,OAAO,EAAEA;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EAGNf,IAAI,KAAK,MAAM,iBACfH,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACnBb,OAAA,CAACJ,OAAO;QAACQ,OAAO,EAAEA,OAAQ;QAACD,IAAI,EAAE;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAGNf,IAAI,KAAK,QAAQ,iBACjBH,OAAA;MAAAa,QAAA,EAAK;IAEL;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEpB;AAACb,EAAA,CAhCuBJ,MAAM;EAAA,QACbP,aAAa;AAAA;AAAAyB,EAAA,GADNlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}