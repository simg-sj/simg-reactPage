{"ast":null,"code":"var _jsxFileName = \"D:\\\\IdeaProjects\\\\valuemap\\\\src\\\\component\\\\pdfView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nexport default function pdfView({\n  pdfUrl\n}) {\n  _s();\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [numPages, setNumPages] = useState(0);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const onDocumentError = error => {\n    console.error(\"pdf viewer error\", error);\n  };\n  const changePage = offset => {\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\n  };\n  const previousPage = () => {\n    changePage(-1);\n  };\n  const nextPage = () => {\n    changePage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex_center flex-col\",\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: 'sample.pdf',\n      onLoadSuccess: onDocumentLoadSuccess,\n      onLoadError: onDocumentError,\n      children: Array.from(new Array(numPages), (_, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Page, {\n              pageNumber: index + 1,\n              width: 620,\n              renderAnnotationLayer: false\n            }, `page_${index + 1}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute bottom-0 text-[14px] font-normal space-x-6 flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"\\uC774\\uC804\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: numPages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"\\uB2E4\\uC74C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(pdfView, \"PHJ2BPOWSuQdli/JQqJ/jFe5NS0=\");\n;","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","pdfView","pdfUrl","_s","numPages","setNumPages","onDocumentLoadSuccess","onDocumentError","error","console","changePage","offset","setPageNumber","prevPageNumber","previousPage","nextPage","className","children","file","onLoadSuccess","onLoadError","Array","from","_","index","pageNumber","width","renderAnnotationLayer","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/IdeaProjects/valuemap/src/component/pdfView.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs  } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\ntype PDFViewerProps = {\r\n    path: string;\r\n    scale: number;\r\n};\r\n\r\n\r\nexport default function pdfView ({ pdfUrl } : any)  {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [numPages, setNumPages] = useState<number>(0);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages } : any) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n    const onDocumentError = (error: Error) => {\r\n        console.error(\"pdf viewer error\", error);\r\n    };\r\n\r\n    const changePage = (offset: number) => {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    };\r\n\r\n    const previousPage = () => {\r\n        changePage(-1);\r\n    };\r\n\r\n    const nextPage = () => {\r\n        changePage(1);\r\n    };\r\n\r\n    return (\r\n        <div className='w-full h-full flex_center flex-col'>\r\n                <Document\r\n                    file={'sample.pdf'}\r\n                    onLoadSuccess={onDocumentLoadSuccess}\r\n                    onLoadError={onDocumentError}\r\n                >\r\n                    {Array.from(new Array(numPages), (_, index) => {\r\n                        return (\r\n                            <div className='flex_center'>\r\n                                <div>\r\n                                    <Page\r\n                                        key={`page_${index + 1}`}\r\n                                        pageNumber={index + 1}\r\n                                        width={620}\r\n                                        renderAnnotationLayer={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='absolute bottom-0 text-[14px] font-normal space-x-6 flex'>\r\n                                    <button>이전</button>\r\n                                    <p>{numPages}</p>\r\n                                    <button>다음</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </Document>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAS,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnDF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAI,2CAA0CJ,KAAK,CAACK,OAAQ,gBAAe;AAO9G,eAAe,SAASC,OAAOA,CAAE;EAAEC;AAAa,CAAC,EAAG;EAAAC,EAAA;EAChD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EAEnD,MAAMc,qBAAqB,GAAGA,CAAC;IAAEF;EAAe,CAAC,KAAK;IAClDC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMG,eAAe,GAAIC,KAAY,IAAK;IACtCC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC5C,CAAC;EAED,MAAME,UAAU,GAAIC,MAAc,IAAK;IACnCC,aAAa,CAACC,cAAc,IAAIA,cAAc,GAAGF,MAAM,CAAC;EAC5D,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvBJ,UAAU,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACnBL,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACIb,OAAA;IAAKmB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eAC3CpB,OAAA,CAACJ,QAAQ;MACLyB,IAAI,EAAE,YAAa;MACnBC,aAAa,EAAEb,qBAAsB;MACrCc,WAAW,EAAEb,eAAgB;MAAAU,QAAA,EAE5BI,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAACjB,QAAQ,CAAC,EAAE,CAACmB,CAAC,EAAEC,KAAK,KAAK;QAC3C,oBACI3B,OAAA;UAAKmB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBpB,OAAA;YAAAoB,QAAA,eACIpB,OAAA,CAACH,IAAI;cAED+B,UAAU,EAAED,KAAK,GAAG,CAAE;cACtBE,KAAK,EAAE,GAAI;cACXC,qBAAqB,EAAE;YAAM,GAHvB,QAAOH,KAAK,GAAG,CAAE,EAAC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAI3B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNlC,OAAA;YAAKmB,SAAS,EAAC,0DAA0D;YAAAC,QAAA,gBACrEpB,OAAA;cAAAoB,QAAA,EAAQ;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnBlC,OAAA;cAAAoB,QAAA,EAAIb;YAAQ;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBlC,OAAA;cAAAoB,QAAA,EAAQ;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd;AAAC5B,EAAA,CArDuBF,OAAO;AAqD9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}